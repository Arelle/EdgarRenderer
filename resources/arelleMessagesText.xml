<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type="text/xsl" href="arelleToFrd.xsl"?>
<messages
    variablePrefix="{"
    variableSuffix="}"
    variablePrefixEscape="{">
<!-- 

This file contains replacements for Arelle messages text.   Each message has a code 
that corresponds to the message code in the log file.  The text string contains 
replacement parameters based on named arguments in the message using
org.apache.commons.lang3.text.StrSubstitutor.  

(Duplicates with same code use only the first message of each code.)

With 
Named parameters have the format {name}, (whereas within the Python code of Arelle they have the format %(name)s.
       
Example (note that line feeds within the message are preserved in the log output file.  
The string is trimmed, so only inital and trailing whitespace is removed when logging.
  
<message code="EFM.6.99.88.77">
Whoops, you messed up ${fact} in contextID $(contextID} with error ${error}.
This filling will self destruct and evaporate in 24 hours.
</message>

In addition to args named for each message, there always are these arguments too:
   {refUrl} the (first) file/url where the error was detected
   {refLine} the (first) line where the error was detected
   {refSource}  the (first) file + line where the errors were detected (file name + 'line' line number if line number is known
         (there is no comma between file name, 'line', and line number, so that they can be in below comma separated list)
   {refSources} a comma-separated list of '{url} line {lineNum}' where each of (possibly multiple) of the issue was found
   {refSources2_n} same but starts at second entry (such as for when concept is the first entry before relationships

note: The special substitution $local-name() strips a prefix, if any, from a QName argument.

-->

<!-- general comment, those messages not providing reference to source lines should consider {refSources} -->

<message code="EFM.6.22.00"
         level="error"
         module="ModelDocument.py" line="50"
         args="url blockedIndicator referringUrl">
[cp-2200-Prohibited-Href-Or-Schema-Location] File "{url}" referenced in {refUrl} is not supported. Please see http://www.sec.gov/info/edgar/edgartaxonomies.shtml for a listing of supported files.
</message>

<message code="EFM.6.05.15"
         level="error"
         module="ValidateFilingText.py" line="486"
         args="fact contextID error">
[cp-0515-Text-Block-Not-Well-Formed-XML] A {fact} fact contains unbalanced tags, in {refSource}.  (For example, &lt;BR> must be followed by &lt;/BR>; values of attributes such as "align" must be quoted, as in align="center".)  XML parser messages: {error}.
</message>

<message code="EFM.6.05.15.dtdError"
         level="error"
         module="ValidateFilingText.py" line="486"
         args="fact contextID error">
[cp-0515-Text-Block-Not-Well-Formed-XML] A {fact} fact contains unbalanced tags, in {refSource}.  (For example, &lt;BR> must be followed by &lt;/BR>; values of attributes such as "align" must be quoted, as in align="center".)  XML parser messages: {error}.
</message>

<message code="EFM.6.05.16"
         level="error"
         module="ValidateFilingText.py" line="486"
         args="fact contextID error">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML "body" tag: {error}.
</message>

<!--
<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="135"
         args="linkrole xlinkLabelFrom xlinkLabelTo attribute">
Arc in extended link {linkrole} from {xlinkLabelFrom} to {xlinkLabelTo} attribute '{attribute}' has no matching loc or resource label
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="222"
         args="cycle path arcrole linkrole linkname arcname">
Relationships have a {cycle} cycle in arcrole {arcrole} 
link role {linkrole} 
link {linkname}, 
arc {arcname}, 
path {path}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="245"
         args="weight source target linkrole sourceBalance targetBalance">
Calculation relationship has illegal weight {weight} from {source}, {sourceBalance}, to {target}, {targetBalance}, in link role {linkrole} (per 5.1.1.2 Table 6)
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="535"
         args="fact contextID decimals">
Fact {fact} context {contextID} decimals {decimals} is invalid
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="596"
         args="fact attribute">
Fact {fact} is a tuple and must not have attribute in this namespace {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="706"
         args="contextID contextElement elementName">
Context {contextID} {contextElement} cannot have xbrli element {elementName}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="712"
         args="contextID contextElement elementName">
Context {contextID} {contextElement} cannot have item or tuple element {elementName}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrl.py" line="721"
         args="contextID contextElement">
Context {contextID} {contextElement} cannot be empty
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="1059"
         args="element fileType prefix">
{fileType} element {element} must not have xmlns:{prefix}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="1074"
         args="value">
Documentation element must not be used: {value}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="1091"
         args="element attribute">
Linkbase element {element} must not have attribute {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="1098"
         args="element attribute">
Linkbase element {element} must not have attribute xlink:{attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="1106"
         args="fileType value">
{fileType} must have only one comment node before schema element: "{value}"
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="159"
         args="linkElement locHref">
{linkElement} loc href {locHref} must identify a concept or label
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="327"
         args="concept requirement attribute">
Schema element {concept} {requirement} contain attribute {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="350"
         args="concept requirement attribute">
Schema root element {concept} {requirement} contain attribute {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="461"
         args="element">
Schema file element must not be used "{element}"
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="481"
         args="element">
{element} not child of xsd:appinfo
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="487"
         args="element attribute">
{element} missing or invalid {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="491"
         args="element attribute roleURI">
Duplicate {element} {attribute} {roleURI}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="498"
         args="element roleURI otherSchema">
{element} {roleURI} not s-equal in {otherSchema}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="505"
         args="element roleURI value">
{element} {roleURI} invalid cyclesAllowed {value}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="533"
         args="element roleURI value">
{element} {roleURI} usedOn {value} on has s-equal duplicate
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="587"
         args="element refURI">
{element} {refURI} missing
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="591"
         args="element refURI">
{element} is duplicated for {refURI}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="595"
         args="element refURI">
{element} {refURI} is not defined
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="610"
         args="refURI xlinkHref attribute">
Arcrole {refURI} arcroleRef {xlinkHref} must not have an {attribute} attribute
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="617"
         args="refURI xlinkHref attribute">
Role {refURI} roleRef {xlinkHref} must not have an {attribute} attribute
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="640"
         args="attribute">
Element {element}has empty {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="656"
         args="element attribute">
Element {element} missing: {attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="725"
         args="xlinkRole element">
Generic link role {xlinkRole} missing usedOn for {2}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="787"
         args="element link">
Element {element} is a custom locator in a standard {link}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="800"
         args="element attribute">
Element {element} missing xlink:{attribute}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="814"
         args="element xlinkLabel lang">
Element {element} {xlinkLabel} has unauthorized xml:lang='{lang}'
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDTS.py" line="992"
         args="xlinkFrom xlinkTo arcrole">
DefinitionArc from {xlinkFrom} to {xlinkTo} has unauthorized arcrole {arcrole}
</message>

<message code="(dynamic)"
         level="error"
         module="ValidateXbrlDimensions.py" line="273"
         args="contextID dimension value">
Context {contextID} {dimension} {value} is not an appropriate dimension item
</message>

<message code="(dynamic)"
         level="error-semantic"
         module="ValidateFiling.py" line="1492"
         args="conceptSum linkrole reasonPresumedTotal itemConcepts missingConcepts contextIDs">
(dynamic)
</message>

<message code="(dynamic)"
         level="info"
         module="FormulaConsisAsser.py" line="110"
         args="">
(dynamic)
</message>

<message code="(dynamic)"
         level="info"
         module="FormulaEvaluator.py" line="168"
         args="">
(dynamic)
</message>

<message code="(dynamic)"
         level="info"
         module="ValidateFormula.py" line="84"
         args="xlinkFrom xlinkTo element">
Relationship from {xlinkFrom} to {xlinkTo} should have an {element} source
</message>

<message code="(dynamic)"
         level="info"
         module="ValidateFormula.py" line="91"
         args="xlinkFrom xlinkTo element">
Relationship from {xlinkFrom} to {xlinkTo} should have an {element} target
</message>

<message code="(dynamic)"
         level="info"
         module="ValidateXbrlDTS.py" line="577"
         args="elementName">
Link:{elementName} not child of link:linkbase or xbrli:instance
</message>

<message code="(dynamic)"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="160"
         args="fact contextID value deprecation date documentation">
{deprecation} of fact(s) {fact} (e.g., in context {contextID} value {value}) was deprecated on {date}: {documentation}
</message>

<message code="(dynamic)"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="166"
         args="fact contextID value deprecation date">
{deprecation} of facts {fact} in context {contextID} value {value} was deprecated on {date}
</message>

-->

<!--WcH 5.02.02.06 would be caught by EDGARLink but is useful for offline validation -->
<message code="EFM.5.01.01"
         level="error"
         module="ValidateFilingDTS.py" line="67"
         args="filename suffix">
[cp-0501-File-Name] Document file name {filename} must start with a-z or 0-9, contain lower case letters, ., -, _, and end with {suffix}.
</message>

<!--WcH.5.02.02.06 would be caught by EDGARLink but is useful for offline validation -->
<message code="EFM.5.01.01.tooManyCharacters"
         level="error"
         module="ValidateFilingDTS.py" line="63"
         args="filename">
[cp-0501-File-Name-Length] Document file name {filename} must not exceed 32 characters.
</message>

<!--WcH 5.02.02.06 would be caught by EDGARLink but is useful for offline validation -->
<message code="EFM.5.02.01.01"
         level="error"
         module="ValidateFilingText.py" line="403"
         args="modelDocument text file line column">
[cp-0501-File-Character] Disallowed character '{text}' in file {file} at line {line} col {column}
</message>

<!--WcH 5.02.02.06 would be caught by EDGARLink but is useful for offline validation -->
<message code="EFM.5.02.02.06"
         level="error"
         module="ValidateFilingText.py" line="399"
         args="modelDocument text file line column">
[cp-0502-File-Entity-Code] Disallowed entity code {text} in file {file} line {line} column {column}
</message>

<message code="EFM.5.02.05.standardNamespacePrefix"
         level="error"
         module="ValidateFiling.py" line="1408"
         args="submittedPrefix recommendedPrefix namespace">
[ix-0502-Standard-Namespace-Prefix] The prefix {submittedPrefix} must be replaced by {recommendedPrefix} for standard namespace {namespace}
</message>

<message code="EFM.5.02.05.14.hidden-fact-eligible-for-transform"
         level="warning"
         module="ValidateFiling.py" line="1439"
         args="countEligible elements">
[ix-0514-Hidden-Fact-Eligible-For-Transform] WARN: {countEligible} fact(s) appearing in ix:hidden were eligible for transformation: {elements}
</message>

<message code="EFM.5.02.05.14.hidden-fact-not-referenced"
         level="warning"
         module="ValidateFiling.py" line="1458"
         args="countUnreferenced elements">
[ix-0514-Hidden-Fact-Not-Referenced] WARN: {countUnreferenced} fact(s) appearing in ix:hidden were not referenced by any -sec-ix-hidden style property: {elements}
</message>

<message code="EFM.5.02.05.14.hidden-fact-multiple-references"
         level="warning"
         module="ValidateFiling.py" line="1448"
         args="element id countReferences">
[ix-0514-Hidden-Fact-Multiple-References] WARN: {element} is referenced by {countReferences} -sec-ix-hidden style properties: {id}.
</message>

<message code="EFM.5.02.05.14.hidden-fact-not-found"
         level="error"
         module="ValidateFiling.py" line="1448"
         args="id">
[ix-0514-Hidden-Fact-Not-Found] The value of the -sec-ix-hidden style property, {id}, does not correspond to the id of any hidden fact.
</message>

<message code="EFM.6.03.02.sdrHasNonSdrExhibit"
         level="error"
         module="EFM/__init__.py" line="309"
         args="documentType exhibitType">
[cp-0302-Sdr-Has-Non-Sdr-Exhibit] An SDR filing contains non-SDR exhibit type {exhibitType} document type {documentType}.
</message>

<message code="EFM.6.03.02.sdrMissingFiles"
         level="error"
         module="EFM/__init__.py" line="297"
         args="docType missingFiles">
[cp-0302-Sdr-Missing-Files] {docType} report missing files: {missingFiles}.
</message>

<message code="EFM.6.03.02.sdrMissingStandardSchema"
         level="error"
         module="EFM/__init__.py" line="303"
         args="docType missingFiles">
[cp-0302-Sdr-Missing-Standard-Schema] {documentType} submission must use a US GAAP standard schema.
</message>

<!--WcH 6.03.03 would be caught by EDGARLink but is useful for offline validation -->
<!-- the 6.03.03 messages are not indicative of the nature of the problems.  this whole section needs attention. -->
<message code="EFM.6.03.03"
         level="error"
         module="ValidateFiling.py" line="104"
         args="filename">
[cp-0303-Valid-File-Extension] The document type and naming of "{filename}" naming is not consistent with one or more of the following:

EX-101.INS - XBRL Instance document (Required) *.xml
EX-101.SCH - XBRL Taxonomy Extension Schema document *.xsd
EX-101.REF - XBRL Taxonomy Extension Reference Linkbase document *.xml
EX-101.CAL - XBRL Taxonomy Extension Calculation Linkbase document *.xml
EX-101.DEF - XBRL Taxonomy Extension Definition Linkbase document *.xml
EX-101.LAB - XBRL Taxonomy Extension Labels Linkbase document *.xml
EX-101.PRE - XBRL Taxonomy Extension Presentation Linkbase document *.xml

Please ensure that you comply with the document type and naming provided.
</message>

<!-- these have to be given better text
<message code="EFM.6.03.03"
         level="error"
         module="ValidateFiling.py" line="104"
         args="filename">
Invalid instance document base name part (date) in "{base}-{yyyymmdd}.xml": {filename}
</message>

<message code="EFM.6.03.03"
         level="error"
         module="ValidateFiling.py" line="108"
         args="filename">
Invalid instance document name, must match "{base}-{yyyymmdd}.xml": {filename}
</message>

<message code="EFM.6.03.03"
         level="error"
         module="ValidateFiling.py" line="97"
         args="filename">
Invalid instance document base name part (ticker or mnemonic name) in "{base}-{yyyymmdd}.xml": {filename}
</message>

<message code="EFM.6.03.03"
         level="error"
         module="ValidateFilingDTS.py" line="590"
         args="filename expectedFilename">
Invalid schema file name: {filename}, expected {expectedFilename}
</message>

<message code="EFM.6.03.03"
         level="error"
         module="ValidateFilingDTS.py" line="606"
         args="filename expectedFilename">
Invalid linkbase file name: {filename}, expected {expectedFilename}
</message>
-->

<!--WcH 6.03.03.noLinkElement would be caught by EDGARLink but is useful for offline validation -->
<message code="EFM.6.03.03.noLinkElement"
         level="error"
         module="ValidateFilingDTS.py" line="610"
         args="filename">
[cp-0303-Valid-File-Extension] Invalid linkbase file name: {filename}, has no extended link element, cannot determine link type.
</message>

<message code="EFM.6.03.06"
         level="error"
         module="ValidateXbrlDTS.py" line="90"
         args="elementHref">
[cp-0306-Href-Xpointers] Href {elementHref} may only have shorthand xpointers
</message>

<message code="EFM.6.03.08.moreThanOneIns"
         level="error"
         module="EFM/__init__.py" line="285"
         args="exhibitType">
[cp-0308-More-Than-One-Ins] The submission contains more than one instance for exhibit type {exhibitType}.  Remove all but one or change the exhibit types.
</message>

<message code="EFM.6.03.08.sdrHasMultipleKreports"
         level="error"
         module="EFM/__init__.py" line="268"
         args="exhibitType">
[cp-0308-Sdr-Has-Multiple-K-Reports] SDR filing has multiple K SDR reports for {entities}.
</message>

<message code="EFM.6.03.10"
         level="error"
         module="EFM/Filing.py" line="1925"
         args="documentType">
[cp-0310-Missing-Schema] The submission is missing required schema attachment {documentType}.
</message>

<!-- had inconsistent file/line number text order -->
<message code="EFM.6.03.11"
         level="error"
         module="ModelDocument.py" line="617"
         args="modelObejct element attribute">
[du-0311-Xml-Base-Used] The attribute xml:base appears in on element {element} in {refSource}. Please remove the attribute.
</message>

<message code="EFM.6.04.03"
         level="error"
         module="ValidateFiling.py" line="339"
         args="fact contextID">
[fs-0403-Fact-Xbrl-Error] Fact {fact} of context {contextID} has an XBRL error
</message>

<message code="EFM.6.05.01"
         level="error"
         module="ValidateFiling.py" line="125"
         args="scheme context identifier">
[cp-0501-Entity-Identifier-Scheme] Your identifier for the CIK code, {identifier}, or scheme {scheme}, in context {context}, did not adhere to the standard naming convention of &lt;identifier scheme="http://www.sec.gov/CIK">xxxxxxxxxx&lt;/identifier>.  Please recheck your submission and comply with the standard naming convention.
</message>

<!--
<message code="EFM.6.05.02"
         level="error"
         module="ValidateFiling.py" line="130"
         args="entityIdentifierName entityIdentifer">
Invalid entity identifier {entityIdentifierName}: {entityIdentifer}
</message>
-->

<message code="EFM.6.05.03"
         level="error"
         module="ValidateFiling.py" line="139"
         args="entityIdentifierName entityIdentifer entityIdentifer2 filerIdentifier">
[cp-0523-Non-Matching-Cik] The submission CIK, {filerIdentifier} does not match either the EntityCentralIndexKey, {entityIdentifer}, or context identifier CIK(s) {entityIdentifer}, {entityIdentifer2}, or is not 10 digits, for required context(s).  Please include a correct matching EntityCentralIndexKey and context identifier CIK(s) in the filing.
</message>

<message code="EFM.6.05.04"
         level="error"
         module="ValidateFiling.py" line="185"
         args="elementName context count">
[cp-0504-No-Scenario] There must be no contexts with scenarios, but {count} was(were) found: {context}.
</message>

<message code="EFM.6.05.05"
         level="error"
         module="ValidateFiling.py" line="197"
         args="context content count">
[cp-0505-Segment-Child-Not-Explicit-Member] There must be no segments with non-explicitDimension content, but {count} was(were) found: {content}.
</message>

<!-- note arelle identifies the duplicate context, original text didn't identify the other which was a duplicate -->
<message code="EFM.6.05.07"
         level="error"
         module="ValidateFiling.py" line="157"
         args="context context2">
[du-0507-Duplicate-Contexts] The instance document contained more than one context equivalent to {context} ({context2}).  Please remove duplicate contexts from the instance.
</message>

<!-- note that arelle provides a list of unused context IDs, XPE may have done these one by one -->
<message code="EFM.6.05.08"
         level="error"
         module="ValidateFiling.py" line="376"
         args="modelXbrl contextIDs">
[du-0508-Unused-Context] The instance document contained a context {contextIDs} that was not used in any fact. Please remove the context from the instance.
</message>

<!-- added the endDate which arelle reports, but XPE didn't -->
<message code="EFM.6.05.09"
         level="error"
         module="ValidateFiling.py" line="431"
         args="endDate startDate endContexts startContexts documentType">
[fs-0509-Start-And-End-Dates-Not-Distinct-Inconsistent-With-Document-Type] Context {endContexts} endDate and {startContexts} startDate have a duration of one day; that is inconsistent with document type {documentType}.
</message>

<!-- added the endDate which arelle reports, but XPE didn't -->
<message code="EFM.6.05.10"
         level="error"
         module="ValidateFiling.py" line="437"
         args="endDate contexts documentType">
[fs-0510-Start-And-Instant-Dates-Not-Distinct-Inconsistent-With-Document-Type]  Contexts {contexts} have an overlap of one day; that is inconsistent with document type {documentType}.
</message>

<!-- note that arelle has available the ID of the other unit -->
<message code="EFM.6.05.11"
         level="error"
         module="ValidateFiling.py" line="464"
         args="unitID unitID2">
[du-0511-Duplicate-Units] There is more than one unit equivalent to {unitID} ({unitID2}).  Please remove all but one and resubmit.
</message>

<!-- note that arelle has available the ID of the other context -->
<message code="EFM.6.05.12"
         level="error"
         module="ValidateFiling.py" line="523"
         args="fact contextID contextID2">
[du-0512-Duplicate-Facts] The instance document contained an element, {fact} that was used more than once in contexts equivalent to {contextID}.  Please ensure there are no duplicate combinations of concept and context in the instance.
</message>

<!-- added the nonenglish lang -->
<message code="EFM.6.05.14"
         level="error"
         module="ValidateFiling.py" line="540"
         args="fact contextID lang lang2">
[du-0514-English-Text-Missing] Element {fact} in context {contextID} has text with xml:lang other than "en-US" without matching English text.  Please provide a fact with xml:lang equal to "en-US".
</message>

<!-- arelle has contextID available for message -->
<message code="EFM.6.05.15"
         level="error"
         module="ValidateFilingText.py" line="532"
         args="fact contextID error">
[cp-0515-Text-Block-Not-Well-Formed-XML] A {fact} fact contains unbalanced tags, in {refSource}.  (For example, &lt;BR> must be followed by &lt;/BR>; values of attributes such as "align" must be quoted, as in align="center".)  XML parser messages: {error}.
</message>

<!-- arelle has contextID available for message -->
<message code="EFM.6.05.16"
         level="error"
         module="ValidateFilingText.py" line="461"
         args="fact contextID error">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: {error}.
</message>

<message code="EFM.6.05.16.activeContent"
         level="error"
         module="ValidateFilingText.py" line="496"
         args="fact contextID attribute element">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: javascript in '{attribute}' for &lt;{element}>.
</message>

<message code="EFM.6.05.16.externalReference"
         level="error"
         module="ValidateFilingText.py" line="503"
         args="fact contextID attribute element">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: external reference in '{attribute}' for &lt;{element}>.
</message>

<message code="EFM.6.05.16.graphicFileContent"
         level="error"
         module="ValidateFilingText.py" line="516"
         args="fact contextID attribute element">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: reference to a graphics file which doesn't have expected content '{attribute}' for &lt;{element}>.
</message>

<message code="EFM.6.05.16.graphicFileError"
         level="error"
         module="ValidateFilingText.py" line="521"
         args="fact contextID attribute element error">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: reference to a graphics file which isn't openable '{attribute}' for &lt;{element}>, error: {error}.
</message>

<message code="EFM.6.05.16.graphicFileType"
         level="error"
         module="ValidateFilingText.py" line="509"
         args="fact contextID attribute element">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: reference to a graphics file which isn't .gif or .jpg '{attribute}' for &lt;{element}>
</message>

<message code="EFM.6.05.16.nestedTable"
         level="error"
         module="ValidateFilingText.py" line="526"
         args="fact contextID">
[cp-0516-Prohibited-Html-Body] A {fact} fact, in {refSource}, contains text that is not valid for the content of the HTML 'body' tag: nested &lt;table> elements.
</message>

<message code="EFM.6.05.17"
         level="error"
         module="ValidateFiling.py" line="348"
         args="fact contextID precision">
[fs-0517-Decimals-Not-Precision] Your filing contained elements using the precision attribute.  Please recheck your submission and replace the precision attribute with the decimals attribute.
</message>

<message code="EFM.6.05.19"
         level="error"
         module="ValidateFiling.py" line="454"
         args="documentType">
[cp-0519-Required-Context] Required context (no segment) not found for document type {documentType}.
</message>

<!-- arelle has broken the three cases of identifier mismatch separately, tweaked the message text -->
<message code="EFM.6.05.23"
         level="error"
         module="ValidateFiling.py" line="287"
         args="elementName value entityIdentifier">
[cp-0523-Non-Matching-Cik] The EntityCentralIndexKey, {value}, does not match the context identifier CIK {entityIdentifier}.  Please include a correct matching EntityCentralIndexKey and context identifier CIK(s) in the filing.
</message>

<message code="EFM.6.05.23.submissionIdentifier"
         level="error"
         module="ValidateFiling.py" line="292"
         args="elementName value filerIdentifier">
[cp-0523-Non-Matching-Cik] The submission CIK, {filerIdentifier} does not match the EntityCentralIndexKey.  Please include a correct matching EntityCentralIndexKey in the filing.
</message>

<message code="EFM.6.05.23.cikValue"
         level="error"
         module="ValidateFiling.py" line="138"
         args="entityIdentifier">
[cp-0523-Non-Matching-Cik] The context identifier CIK {entityIdentifier} is not 10 digits, for required context(s).  Please include a correct context identifier CIK in the filing.
</message>

<!-- check that the wrapper parameters have same counts -->
<!--WcH would indicate a wrapper bug not a user error 
<message code="EFM.6.05.24.parameters"
         level="error"
         module="ValidateFiling.py" line="236"
         args="modelXbrl cikList cikNameList">
parameters for cikList and cikNameList different list entry counts: {cikList}, {cikNameList}
</message>
-->

<!-- arelle is checking the prefix and list of names, not sure if this message text reflects that, and message text is not indicating the prefix (name) it is looking up -->
<message code="EFM.6.05.24"
         level="error"
         module="ValidateFiling.py" line="301"
         args="elementName prefix value">
[cp-0524-Registrant-Name-Mismatch] The Official Registrant name, {prefix}, does not match the value {value} in the Required Context.  Please correct dei:EntityRegistrantName.
</message>

<message code="EFM.6.05.24.multipleLSdrReportsForEntity"
         level="error"
         module="ValidateFiling.py" line="301"
         args="entity">
[cp-0524-Multiple-L-Sdr-Reports-For-Entity] There is more than one L SDR Exhibit having EntityRegistrantName {entity}. Change one of the names or remove one of the L SDR exhibits.
</message>

<message code="EFM.6.05.25"
         level="error"
         module="ValidateFiling.py" line="354"
         args="fact contextID">
[du-0525-Domain-As-Fact] The domain item {fact} cannot appear as a fact, in {refSource}.  Please remove the fact from context {contextID}.
</message>

<!-- note that arelle has many variants of 6.05.26, wondering if they should be different messages -->
<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="666"
         args="contextID documentType">
[im-0526-Entity-Common-Shares-Outstanding]  An instance with dei:DocumentType of {documentType} must have one dei:EntityCommonStockSharesOutstanding fact for each class of stock or units outstanding.
</message>

<!-- second message of same code, can use above message
<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="670"
         args="documentType">
dei:EntityCommonStockSharesOutstanding is required for DocumentType '{documentType}' but but a default-context because only one class of stock
</message>

<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="675"
         args="documentType stockClasses">
dei:EntityCommonStockSharesOutstanding is required for DocumentType '{documentType}' but missing in these stock classes: {stockClasses}
</message>

<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="680"
         args="documentType stockClasse">
dei:EntityCommonStockSharesOutstanding is required for DocumentType '{documentType}' but only one per stock class {stockClass}
</message>

<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="690"
         args="documentType">
dei:EntityCommonStockSharesOutstanding is required for DocumentType '{documentType}' but missing for a non-default-context fact
</message>

<message code="EFM.6.05.26"
         level="error"
         module="ValidateFiling.py" line="694"
         args="documentType">
dei:EntityCommonStockSharesOutstanding is required for DocumentType '{documentType}' in the default context because there are not multiple classes of common shares
</message>
-->

<message code="EFM.6.05.27"
         level="error"
         module="ValidateFiling.py" line="734"
         args="footnoteLinkNumber elementName">
[du-0527-Footnote-Substitution-Group]  Footnote link {footnoteLinkNumber} has a child element {elementName} that is not allowed.  Please remove it.
</message>

<!-- this is a footnote link role error, what messages should it have? -->
<!--WcH this is not forbidden by EFM 22.  6.5.28 is only about the footnote element.
<message code="EFM.6.05.28.linkrole"
         level="error"
         module="ValidateFiling.py" line="717"
         args="footnoteLinkNumber linkrole">
FootnoteLink {footnoteLinkNumber} has disallowed role {linkrole}</message>
-->

<!-- arelle provides this, tweaked the above message -->
<message code="EFM.6.05.28.missingRole"
         level="error"
         module="ValidateFiling.py" line="764"
         args="xlinkLabel">
[du-0528-Footnote-Role-Missing] Footnote {xlinkLabel} is missing a role. Please provide the default footnote role.
</message>

<message code="EFM.6.05.28"
         level="error"
         module="ValidateFiling.py" line="769"
         args="xlinkLabel role">
[du-0528-Footnote-Custom-Footnote-Role]  Footnote {xlinkLabel} has a role {role} that is not allowed. Please replace it with the default footnote role.
</message>

<message code="EFM.6.05.29"
         level="error"
         module="ValidateFiling.py" line="742"
         args="footnoteLinkNumber locNumber xlinkLabel role">
[du-0529-Footnote-Custom-Loc-Role] Footnote locator {xlinkLabel} has a custom role, {role} that is not allowed.  Please replace it with the default footnote role.
</message>

<message code="EFM.6.05.30"
         level="error"
         module="ValidateFiling.py" line="758"
         args="footnoteLinkNumber arcNumber arcToLabel arcrole">
[du-0530-Footnote-Custom-Arcrole] Footnote relationship {arcToLabel} has a custom arc role {arcrole} that is not allowed.  Please replace it with the default (fact-footnote) arcrole.
</message>

<message code="EFM.6.05.32"
         level="error"
         module="ValidateFiling.py" line="748"
         args="footnoteLinkNumber locNumber locLabel locHref">
[du-0532-Footnote-Locator-Portable]  Footnote {locLabel} refers to a location, {locHref}, that does not begin with '#' so that any change to the file name would render the XBRL invalid.
</message>

<message code="EFM.6.05.33"
         level="error"
         module="ValidateFiling.py" line="784"
         args="footnoteLinkNumber footnoteLabel text">
[cp-0533-Dangling-Footnote] The footnote with label {footnoteLabel} and text '{text}' is not connected to any fact.  Please remove the footnote, or link it to a fact.
</message>

<message code="EFM.6.05.34"
         level="error"
         module="ValidateFilingText.py" line="601"
         args="xlinkLabel error">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: {error}.
</message>

<message code="EFM.6.05.34.activeContent"
         level="error"
         module="ValidateFilingText.py" line="565"
         args="xlinkLabel attribute element">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: javascript in '{attribute}' for &lt;{element}>.
</message>

<message code="EFM.6.05.34.dtdError"
         level="error"
         module="ValidateFilingText.py" line="555"
         args="xlinkLabel error">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: XML error {error}
</message>

<message code="EFM.6.05.34.externalReference"
         level="error"
         module="ValidateFilingText.py" line="572"
         args="xlinkLabel attribute element value">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: invalid external reference in '{attribute}' for &lt;{element}>: {value}
</message>

<message code="EFM.6.05.34.graphicFileContent"
         level="error"
         module="ValidateFilingText.py" line="585"
         args="xlinkLabel attribute element">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: reference to a graphics file which doesn't have expected content '{attribute}' for &lt;{element}>
</message>

<message code="EFM.6.05.34.graphicFileError"
         level="error"
         module="ValidateFilingText.py" line="590"
         args="xlinkLabel attribute element error">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: reference to a graphics file which isn't openable '{attribute}' for &lt;{element}>, error: {error}
</message>

<message code="EFM.6.05.34.graphicFileType"
         level="error"
         module="ValidateFilingText.py" line="578"
         args="xlinkLabel attribute element">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: reference to a graphics file which isn't .gif or .jpg '{attribute}' for &lt;{element}>
</message>

<message code="EFM.6.05.34.nestedTable"
         level="error"
         module="ValidateFilingText.py" line="595"
         args="xlinkLabel">
[cp-0534-Prohibited-Html-Footnote-Body] Footnote {xlinkLabel}, line {refLine}, contains text that is not valid for the content of the HTML "body" tag: nested &lt;table> elements.
</message>

<message code="EFM.6.05.36"
         level="error"
         module="ValidateFiling.py" line="474"
         args="unitID measure length">
[du-0536-Name-Length-Limit] Unit {unitID} contains a measure element whose local-name in UTF-8 has more than 200 bytes.  Shorten the measure name.
</message>

<message code="EFM.6.05.37"
         level="error"
         module="ValidateFiling.py" line="591"
         args="fact contextID decimals value truncatedDigits insignificantDigits ">
[du-0537-Nonzero-Digits-Truncated] Fact {fact} of context {contextID} decimals {decimals} value {value} has insignificant digits {insignificantDigits}.  Please correct the fact value and resubmit.
</message>

<message code="EFM.6.05.38"
         level="error"
         module="ValidateFiling.py" line="262"
         args="contextID">
[du-0538-Context-Has-Period-Forever] Context {contextID}s uses period &lt;xbrli:forever>. Please remove it and resubmit.</message>

<message code="EFM.6.05.39"
         level="error"
         module="ValidateFiling.py" line="313"
         args="contextIDs dimensions">
[cp-0539-Typed-Dimension-Not-Standard] Typed dimensions must be defined in standard taxonomy schemas, contexts: {contextIDs} dimensions: {dimensions}.
</message>


<message code="EFM.6.05.41.seriesIdMemberNotAxisMember"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="1036"
         args="edgarCode seriesIdMember submissionType">
[dq-0541-Series-Id-Member-Not-Axis-Member] Submission type {subType} should have {seriesIdMember} as a member of the Legal Entity Axis. {refSources}
</message>

<message code="EFM.6.05.41.seriesIdMemberNotInContext"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="1051"
         args="edgarCode seriesIdMember submissionType">
[dq-0541-Series-Id-Member-Not-In-Context] Submission type {subType} should have a context with {seriesIdMember} as a member of the Legal Entity Axis. {refSources}
</message>

<message code="EFM.6.05.41.seriesIdMemberNotDeclared"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="1031"
         args="edgarCode seriesIdMember submissionType">
[dq-0541-Series-Id-Member-Not-Declared] Submission type {subType} should have {seriesIdMember} declared as a domainItemType element. {refSources}
</message>

<message code="EFM.6.05.42"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="682"
         args="edgarCode element count date version1 version2">
[dq-0542-Deprecated-Concept] Concept {element} in {version1} used in {count} facts was deprecated in {version2} as of {date} and should not be used. {refSources}
</message>

<message code="EFM.6.05.43"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="407"
         args="edgarCode element taxonomy value context">
[dq-0543-Negative-Fact-Value] Concept {element} in {taxonomy} has a negative value {value} in context {context}.  Correct the sign, use a more appropriate concept, or change the context. {refSources}
</message>

<message code="EFM.6.05.44.customAxis"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="301"
         args="edgarCode dimension namespace axis taxonomy contextIDs">
[dq-0544-Custom-Axis] Contexts {contextIDs} use dimension {dimension} in namespace {namespace} but {axis} in {taxonomy} is preferred. {refSources}
</message>

<message code="EFM.6.07.01"
         level="error"
         module="ValidateFilingDTS.py" line="49"
         args="schema include">
[du-0701-Schema-Include-Present] The schema contains an 'include' element, in {refSource}.  Please remove it and resubmit.
</message>

<message code="EFM.6.07.03"
         level="error"
         module="ValidateFilingDTS.py" line="95"
         args="schema targetNamespace targetNamespaceAuthority">
[fs-0703-Extension-Has-Standard-Namespace-Authority]  The target namespace, {targetNamespace} cannot have the same authority ({targetNamespaceAuthority}) as a standard taxonomy, in {schema}.  Please change your target namespace.

</message>

<message code="EFM.6.07.04"
         level="error"
         module="ValidateFilingDTS.py" line="118"
         args="schema targetNamespace">
[cp-0704-Taxonomy-Valid-Target-Namespace] You did not adhere to the requirements for target namespace, for {targetNamespace} in {schema}.  Please recheck your submission and adhere to the target namespace requirements.
</message>

<message code="EFM.6.07.05"
         level="error"
         module="ValidateFilingDTS.py" line="131"
         args="schema targetNamespace">
[du-0705-Namespace-Authority] Taxonomy schema {schema} namespace {targetNamespace} must be a valid URI with a valid authority for the namespace.
</message>

<!--WcH this makes no sense to test and should be removed from EFM
<message code="EFM.6.07.06"
         level="info"
         module="ValidateFilingDTS.py" line="122"
         args="schema targetNamespace docNameDate">
Warning: Taxonomy schema {schema} namespace {targetNamespace} has date later than document name date {docNameDate}
</message>
-->

<message code="EFM.6.07.07"
         level="error"
         module="ValidateFilingDTS.py" line="136"
         args="schema targetNamespace">
[du-0707-Recommended-Prefix-Disallowed]  The schema does not supply a prefix for {targetNamespace} without an underscore character, in file {schema}. Please provide or change a prefix
</message>

<!-- share previous message
<message code="EFM.6.07.07"
         level="error"
         module="ValidateFilingDTS.py" line="140"
         args="schema targetNamespace prefix">
Taxonomy schema {schema} namespace {targetNamespace} prefix {prefix} must not have an '_'
</message>
-->

<message code="EFM.6.07.08"
         level="error"
         module="ValidateFilingDTS.py" line="402"
         args="schema">
[cp-0708-No-Embedded-Linkbases] Your filing contained embedded linkbases in {schema}.  Please recheck your submission and remove all embedded linkbases.
</message>

<message code="EFM.6.07.09"
         level="error"
         module="ValidateFilingDTS.py" line="422"
         args="roleType targetNamespaceAuthority targetNamespace">
[du-0709-Role-Namespace-Mismatch] Role {roleType} does not begin with {targetNamespace}'s scheme and authority, in {refSource}. Please change the role URI or target namespace URI.
</message>

<!--WcH do not show warnings other than from 6.5.21
<message code="EFM.6.07.09.roleEnding"
         level="warning"
         module="ValidateFilingDTS.py" line="427"
         args="roleType">
RoleType {roleType} should end with /role/{LC3name}
</message>
-->

<message code="EFM.6.07.10"
         level="error"
         module="ValidateFiling.py" line="975"
         args="roleType numberOfDeclarations">
[du-0710-Role-Type-Duplicates]  Role {roleType} was declared more than once ({numberOfDeclarations} times, in {refSources}).  Please remove all but one declaration.
</message>

<message code="EFM.6.07.11"
         level="error"
         module="ValidateFilingDTS.py" line="444"
         args="roleType usedOn">
[du-0711-Role-Type-Declaration-Incomplete] The role {roleType} did not provide a usedOn element for all three link types (presentation, calculation and definition), in {refSource}. Change the declaration to be for all three types of link, and resubmit.
</message>

<message code="EFM.6.07.12"
         level="error"
         module="ValidateFilingDTS.py" line="451"
         args="roleType definition">
[rq-0712-Role-Definition-Mismatch]  The definition "{definition}" of role {roleType} does not match the expected format, in {refSource}. Please check that the definition matches {{number} - {{type} - {{text}.
</message>

<message code="EFM.6.07.12.presentationBaseSetOrder"
         level="warning"
         module="plugin/validate/EFM/Filing.py" line="1898"
         args="edgarCode descriptionX levelX descriptionY levelY">
[dq-0712-Presentation-Base-Set-Order] Role '{descriptionX}', a level {levelX} role, appears before '{descriptionY}', a level {levelY} role. {refSources}
</message>

<message code="EFM.6.07.13"
         level="error"
         module="ValidateFilingDTS.py" line="482"
         args="arcroleType targetNamespaceAuthority targetNamespace">
[du-0713-Arcrole-Namespace-Mismatch]  Relationship role {arcroleType} does not begin with {targetNamespace}'s scheme and authority, in {refSource}.  Please change the relationship role URI or target namespace URI.
</message>

<!--WcH do not show warnings other than from 6.5.21
<message code="EFM.6.07.13.arcroleEnding"
         level="warning"
         module="ValidateFilingDTS.py" line="487"
         args="arcroleType">
ArcroleType {arcroleType} should end with /arcrole/{LC3name}
</message>
-->

<message code="EFM.6.07.14"
         level="error"
         module="ValidateFiling.py" line="981"
         args="arcroleType numberOfDeclarations">
[du-0714-Arcrole-Type-Duplicates] Relationship arc role {arcroleType} is declared more than once ({numberOfDeclarations} duplicates, {refSources}).  Please remove all but one of them.
</message>

<message code="EFM.6.07.15"
         level="error"
         module="ValidateFilingDTS.py" line="501"
         args="arcroleType">
[du-0715-Arcrole-Definition-Missing]  Relationship role declaration {arcroleType} is missing a definition, in {refSource}.  Please provide a definition.
</message>

<message code="EFM.6.07.16"
         level="error"
         module="ValidateFilingDTS.py" line="158"
         args="concept standardSchema standardConcept">
[cp-0716-Element-Name-Same-As-Base] Your extension taxonomy contains an element, {concept}, which has the same name as an element in the base taxonomy, {standardConcept}.  Please ensure that this extension is appropriate and if so, please change the extension concept name.
</message>

<message code="EFM.6.07.17"
         level="error"
         module="ValidateFilingDTS.py" line="180"
         args="concept id requiredId">
[cp-0717-Element-Id]  You did not adhere to the declarations for concepts by containing an "id" attribute whose value begins with the recommended namespace prefix of the taxonomy, followed by an underscore, followed by an element name, for the concept {concept}.  Please recheck your submission.

</message>

<message code="EFM.6.07.18"
         level="error"
         module="ValidateFilingDTS.py" line="187"
         args="schema concept nillable">
[du-0718-Nillable-Not-True]  Element {concept} is declared without a "true" value for the nillable attribute, in {refSource}.  Please set the value to "true".
</message>

<message code="EFM.6.07.19"
         level="error"
         module="ValidateFilingDTS.py" line="195"
         args="concept">
[cp-0719-No-Tuple-Element] You provided an extension concept which is a tuple, {concept}.  Please remove tuples and check your submission.
</message>

<message code="EFM.6.07.20"
         level="error"
         module="ValidateFilingDTS.py" line="201"
         args="concept typedDomainRef">
[du-0720-Typed-Domain-Ref-Disallowed]  There is an xbrldt:typedDomainRef attribute on {concept}, in {refSource}. Please remove it.
</message>

<message code="EFM.6.07.21"
         level="error"
         module="ValidateFilingDTS.py" line="209"
         args="schema concept">
[du-0721-Abstract-Is-Instant]  Element {concept} is declared as an abstract item with period type "instant", in {refSource}.  Please change it to "duration" or make the element not abstract.
</message>

<message code="EFM.6.07.23"
         level="error"
         module="ValidateFilingDTS.py" line="223"
         args="concept">
[du-0723-Axis-Dimension-Name-Mismatch] The substitution group "xbrldt:dimensionItem" is only consistent with an element name that ends with "Axis".  Please change $local-name({concept}) or change the substitutionGroup, in {refSource}.
</message>

<message code="EFM.6.07.24"
         level="error"
         module="ValidateFilingDTS.py" line="229"
         args="schema concept">
[du-0724-Table-Hypercube-Name-Mismatch] The substitution group "xbrldt:hypercubeItem" is only allowed with an element name that ends with "Table".  Please change $local-name({concept}) or change the substitutionGroup, in {refSource}.

</message>

<message code="EFM.6.07.25"
         level="error"
         module="ValidateFilingDTS.py" line="238"
         args="concept substitutionGroup">
[du-0725-Substitution-Group-Custom] The substitution group attribute value {substitutionGroup} of element $local-name({concept}) is not allowed, in {refSource}.  Please change it to one of "xbrli:item", "xbrldt:dimensionItem" or "xbrldt:hypercubeItem".
</message>

<message code="EFM.6.07.26"
         level="error"
         module="ValidateFilingDTS.py" line="245"
         args="concept">
[du-0726-LineItems-Abstract-Name-Mismatch] The element $local-name({concept}) ends with "LineItems" but is not abstract. Please change $local-name({concept}) or the value of the "abstract" attribute, in {refSource}.
</message>

<message code="EFM.6.07.27"
         level="error"
         module="ValidateFilingDTS.py" line="254"
         args="concept">
[du-0727-Domain-Type-Name-Mismatch] The type "us-types:domainItemType" is only allowed with an element name that ends with "Domain" or "Member".  Please change $local-name({concept}) or change the type, in {refSource}.
</message>

<message code="EFM.6.07.28"
         level="error"
         module="ValidateFilingDTS.py" line="260"
         args="concept">
[du-0728-Domain-Member-Is-Instant] Element $local-name({concept}) is declared as a us-types:domainItemType with period type "instant", in {refSource}.  Please change it to "duration" or change the item type.
</message>

<message code="EFM.6.07.29"
         level="error"
         module="ValidateXbrlDTS.py" line="453"
         args="element name length">
[du-0729-Name-Length-Limit] Shorten this declaration name to 200 bytes or fewer in UTF-8: {name}
</message>

<message code="EFM.6.07.30"
         level="error"
         module="ValidateXbrlDTS.py" line="297 522"
         args="length attribute roleURI targetNamespace value">
[du-0730-Uri-Length-Limit]  Shorten this declaration URI to 255 bytes or fewer in UTF-8: {value}.
</message>

<message code="EFM.6.07.31"
         level="error"
         module="ValidateFilingDTS.py" line="276"
         args="concept">
[du-0731-Fraction-Item-Type] Element {concept} is declared as a fraction item type.  Change or remove the declaration and resubmit.
</message>

<message code="EFM.6.07.32"
         level="error"
         module="ValidateFilingDTS.py" line="281"
         args="schema concept">
[rq-0732-Nonnnumeric-Must-Be-Duration] Declaration of element {concept} in {schema} must have xbrli:periodType of 'duration' because its base type is not numeric.
</message>


<!-- skip semantic messages
<message code="EFM.6.08.03"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="456"
         args="roleuri qnames">
RoleType {roleuri} is defined using role types already defined by standard roles for: {qnames}
</message>

<message code="EFM.6.08.03"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="508"
         args="arcroleuri qnames">
ArcroleType {arcroleuri} is defined using role types already defined by standard arcroles for: {qnames}
</message>

<message code="EFM.6.08.05.LC3"
         level="warning-semantic"
         module="ValidateFilingDTS.py" line="287"
         args="concept lc3name">
Concept {concept} should match expected LC3 composition {lc3name}
</message>

<message code="EFM.6.08.05.disallowedCharacter"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="270"
         args="concept">
Concept {concept} has disallowed name character
</message>

<message code="EFM.6.08.05.firstLetter"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="266"
         args="concept">
Concept {concept} name must start with a capital letter
</message>

<message code="EFM.6.08.05.nameLength"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="274"
         args="concept namelength">
Concept {concept} name length {namelength} exceeds 200 characters
</message>

<message code="EFM.6.08.06"
         level="warning-semantic"
         module="ValidateFilingDTS.py" line="296"
         args="concept matches">
Concept {concept} should not contain company or period information, found: {matches}
</message>

<message code="EFM.6.08.11"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="307"
         args="concept">
Concept {concept} must have a balance because it appears in a statement of income or balance sheet
</message>

<message code="EFM.6.08.16"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="321"
         args="concept">
Concept {concept} of type xbrli:dateItemType must have periodType duration
</message>

<message code="EFM.6.08.17"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="327"
         args="concept">
Concept {concept} of type xbrli:stringItemType must have periodType duration
</message>
-->

<message code="EFM.6.09.03"
         level="error"
         module="ValidateFiling.py" line="964"
         args="arc linkrole linkroleDefinition arcrole conceptFrom conceptTo ineffectivity">
[du-0903-Relationship-Ineffectual] The {arcrole} relationship from {conceptFrom} to {conceptTo}, link role {linkroleDefinition}, in the submission is ineffectual.  Please remove or correct the relationship.
</message>

<!--WcH this message is redundant when the resource is in an instance. -->
<message code="EFM.6.09.04"
         level="error"
         module="ValidateXbrlDTS.py" line="878"
         args="element">
[fs-0904-Resource-Role-Missing]  The {element} element requires an xlink:role such as the default, "http://www.xbrl.org/2003/role/label", in {refSource}.  Please recheck submission.
</message>

<!-- same code, same arguments
<message code="EFM.6.09.04"
         level="error"
         module="ValidateXbrlDTS.py" line="895"
         args="element">
{element} is missing an xlink:role
</message>
-->

<message code="EFM.6.09.05"
         level="error"
         module="ValidateXbrlDTS.py" line="902"
         args="xlinkLabel role roleDefinition element">
[fs-0905-Custom-Resource-Role-Used]  The {element} element has a role, {roleDefinition}, that is not defined in a standard taxonomy, resource labeled {xlinkLabel}, in {refSource}.  Please recheck submission.
</message>

<message code="EFM.6.09.06"
         level="error"
         module="ValidateXbrlDTS.py" line="604"
         args="refURI xlinkHref">
[fs-0906-Custom-Arcrole-Referenced] An arcroleRef element refers to {xlinkHref}, an arcrole, {refURI}, that is not defined in a standard taxonomy, in {refSource}. Please recheck submission.
</message>

<!-- added $element2 to message text -->
<message code="EFM.6.09.07"
         level="error"
         module="ValidateXbrlDTS.py" line="885"
         args="element element2">
[cp-0907-Linkbases-Distinct] Your filing contained extended type links with roles of different namesapces and local names, {element} and {element2} in the same linkbase, {refUrl}.  Please recheck your submission and ensure that all extended-type links in a single linkbase have the same namespace and local name.
</message>

<message code="EFM.6.09.09"
         level="error"
         module="ValidateXbrlDTS.py" line="942"
         args="xlinkFrom xlinkTo priority arcElement">
[du-0909-Relationship-Priority-Not-Less-Than-Ten]  The priority attribute {priority} has a value of ten or greater, on arc {arcElement}, in {refSource}. Please change the priority to value less than 10 and resubmit.
</message>

<message code="EFM.6.10.01"
         level="error"
         module="ValidateFiling.py" line="1339"
         args="concept lang">
[cp-1001-Element-Used-Standard-Label] You have submitted an instance using an element without an en-US standard label {concept} in {refSources2_n}. Please check your submission and correct the labels.
</message>

<!--WcH this is not mentioned in 6.10.01 and is not a standalone error anyway
<message code="EFM.6.10.01.missingLabelLinkbase"
         level="error"
         module="ValidateFiling.py" line="547"
         args="modelXbrl">
A label linkbase is required but was not found
</message>
-->

<message code="EFM.6.10.02"
         level="error"
         module="ValidateFiling.py" line="1320"
         args="concept role lang">
[cp-1002-Element-Used-Has-Duplicate-Label] Concept {concept} has duplicated labels for role {role} lang {lang}.
</message>

<!-- removed label linkbase file name, there may be multipls such files -->
<message code="EFM.6.10.03"
         level="error"
         module="ValidateFiling.py" line="1352"
         args="concept lang role">
[cp-1003-Element-Used-Standard-English-Label] You have submitted an instance using an element {concept} with {lang} for role {role} in instance {refSource}. Labels are in {refSources2_n}. Please check your submission and correct the labels.
</message>

<message code="EFM.6.10.04"
         level="error"
         module="ValidateFiling.py" line="816"
         args="concept concept2 lang text">
[du-1004-English-Standard-Labels-Duplicated] More than one element has {text} as its English standard label ({concept} in {refSource} and {concept2} in {refSource3}).  Please change or remove all but one label.
</message>

<message code="EFM.6.10.05"
         level="error"
         module="ValidateFiling.py" line="809"
         args="concept text">
[cp-1005-Custom-Documentation-Standard-Element] Your filing attempted to add a new definition, "{text}", to an existing concept in the standard taxonomy, {concept}.  Please remove this definition.
</message>

<!-- these messages need text that reflects the EFM section, or breakdown and more text -->
<message code="EFM.6.10.06"
         level="error"
         module="ValidateFiling.py" line="826"
         args="concept role length text">
[rq-1006-Label-Disallowed]  Element {concept} has more than 511 characters or contains a left-angle-bracket character in the label for role {role}, in {refSource}. Please correct the label.
</message>

<!-- SEC text doesn't distinguish these cases
<message code="EFM.6.10.06"
         level="error"
         module="ValidateFiling.py" line="831"
         args="concept role text">
Label for concept {concept} role {role} has disallowed characters: "{text}"
</message>
-->

<message code="EFM.6.10.08"
         level="error"
         module="ValidateFiling.py" line="838"
         args="concept role lang text">
[du-1008-Label-Not-Trimmed] The label {text} of element {concept} has leading or trailing white space, in {refSource}.  Please remove it.
</message>

<message code="EFM.6.10.09"
         level="error"
         module="ValidateFilingDTS.py" line="674"
         args="concept role">
[du-1009-Numeric-Label-Role] Non-numeric element {concept} has a label role for numeric elements: {role}. Please change the role attribute.
</message>

<!-- semantic check -->
<!--WcH semantic check is incomplete because you cannot check what the wording says.
<message code="EFM.6.11.05"
         level="error-semantic"
         module="ValidateFilingDTS.py" line="315"
         args="concept">
Concept {concept} is monetary without a balance and must have a documentation label that disambiguates its sign
</message>
-->

<message code="EFM.6.12.01"
         level="error"
         module="ValidateXbrlDTS.py" line="957"
         args="xlinkFrom xlinkTo conceptFrom conceptTo">
[rq-1201-Presentation-Order-Missing] The presentation relationship from {conceptFrom} to {conceptTo} does not have an order attribute, in {refSource}.  Please provide a value.
</message>

<message code="EFM.6.12.02"
         level="error"
         module="ValidateFiling.py" line="1016"
         args="conceptFrom order linkrole linkroleDefinition conceptTo conceptTo2">
[rq-1202-Presentation-Order-Duplicates] More than one presentation relationship in role {linkroleDefinition} has order value {order}, in {refSources}.  Change all but one so they are distinct.
</message>

<message code="EFM.6.12.03"
         level="error"
         module="ValidateFiling.py" line="1167"
         args="concept">
[cp-1203-Element-Used-Not-Presented] Element {concept} is used in a fact or context in the instance, but is not in any presentation relationships.  Element is defined in {refSources2_n}.  Add the element to at least one presentation group.
</message>

<message code="EFM.6.12.04"
         level="error"
         module="ValidateFiling.py" line="1193"
         args="concept fromConcept lang preferredLabel">
[rq-1204-English-Preferred-Label-Missing]  Element {concept} has no English value for role {preferredLabel}, but there is a presentation relationship from {fromConcept} to {concept} that requires it, in {refSource}. Provide a label with xml:lang equal to "en-US".
</message>

<message code="EFM.6.12.05"
         level="error"
         module="ValidateFiling.py" line="1004"
         args="concept fromConcept preferredLabel linkrole linkroleDefintion">
[rq-1205-Preferred-Label-Duplicates] Relationships from {fromConcept} to {concept} in role {linkroleDefinition} do not have distinct values for the preferredLabel attribute, in {refSources}.  Change all but one value of preferredLabel.
</message>

<message code="EFM.6.12.06"
         level="warning"
         module="EdgarRenderer/Embedding.py" line="312"
         args="linkrole linkroleDefinition linkroleName numberRootConcepts">
[rq-1206-Multiple-Root-Nodes] Presentation group ''{linkroleName}'' has multiple root nodes. XBRL allows unordered root nodes, but rendering requires ordering.  They will instead be ordered by their labels.  To avoid undesirable ordering of axes and primary items across multiple root nodes, rearrange the presentation relationships to have only a single root node.
</message>

<message code="EFM.6.12.07"
         level="warning"
         module="EdgarRenderer/Embedding.py" line="393"
         args="conceptTo conceptFrom linkrole linkroleDefinition linkroleName preferredLabel preferredLabelValue">
[rq-1207-Period-Type-Preferred-Label-Mismatch] In ''{linkroleName}'', element {conceptTo} has period type 'duration' but is given a preferred label {preferredLabelValue} when shown under parent {conceptFrom}.  The preferred label will be ignored.
</message>

<message code="EFM.6.12.08"
         level="warning"
         module="EdgarRenderer/PresentationGroup.py" line="271"
         args="axis linkrole linkroleDefinition linkroleName">
[rq-1208-Axis-Requires-Domain-Child] The presentation group ''{linkroleName}'' contains an axis {axis} with no domain element children, which effectively filters out every fact
</message>

<message code="EFM.6.12.09"
         level="warning"
         module="EdgarRenderer/Embedding.py" line="512"
         args="linkrole linkroleDefinition linkroleName foundMeasureSet missingMeasureSet">
[rq-1209-Presented-Units-Incomplete-Order] Units of measure {foundMeasureSet} were found in ''{linkroleName}'' but the facts presented use these additional units of measure: {missingMeasureSet}.  Add presentation relationships to provide a definite ordering of these additional units in output.
</message>

<message code="EFM.6.14.01"
         level="error"
         module="ValidateXbrlDTS.py" line="964"
         args="xlinkFrom xlinkTo conceptFrom conceptTo">
[du-1401-Calculation-Relationship-Order-Missing] The calculation relationship from {conceptFrom} to {conceptTo} does not have an order attribute, in {refSource}.
</message>

<message code="EFM.6.14.02"
         level="error"
         module="ValidateXbrlDTS.py" line="972"
         args="xlinkFrom xlinkTo conceptFrom conceptTo weight">
[fs-1402-Calculation-Relationship-Weight-Not-Unitary] Weight value {weight} on the calculation relationship from {conceptFrom} to {conceptTo} must be equal to 1 or to -1, in {refSource}. Please recheck submission.
</message>

<message code="EFM.6.14.03"
         level="error"
         module="ValidateFiling.py" line="1051"
         args="linkrole linkroleDefinition conceptFrom conceptTo">
[fs-1403-Calculation-Relationship-Has-Different-Period-Types]  Element {conceptFrom} and element {conceptTo} have different period types, but there is a calculation relationship between them in role {linkroleDefinition}, in {refSource}. Please recheck submission calculation links.
</message>

<message code="EFM.6.14.04"
         level="error"
         module="ValidateFiling.py" line="1072"
         args="linkrole linkroleDefinition concept path">
[fs-1404-Circular-Calculation] Element {concept} is summed into itself in calculation group {linkroleDefinition}.  Please recheck submission.
</message>

<message code="EFM.6.14.05"
         level="error"
         module="ValidateFiling.py" line="1175"
         args="conceptFrom conceptTo linkroleDefinition contextId">
[du-1405-Facts-In-Calculations-Presentation-Missing] Context {contextId} has facts of elements {conceptFrom} and {conceptTo}, with a calculation relationship in {linkroleDefinition}, but these elements are not in any common corresponding presentation relationship group.  The calculation relationship is in {refSource}.
</message>

<!-- semantic error for now
<message code="EFM.6.15.04"
         level="error"
         module="ValidateFiling.py" line="1083"
         args="linkrole linkrole2 concept">
Calculation relationships have a same set of targets in {linkrole} and {linkrole2} starting from {concept}
</message>
-->

<message code="EFM.6.16.01"
         level="error"
         module="ValidateXbrlDTS.py" line="986"
         args="xlinkFrom xlinkTo conceptFrom conceptTo">
[du-1601-Definition-Relationship-Order-Missing] The Definition relationship from {conceptFrom} to {conceptTo} does not have an order attribute, in {refSource}.
</message>

<message code="EFM.6.16.03"
         level="error"
         module="ValidateFiling.py" line="1109"
         args="conceptFrom conceptTo linkrole">
[du-1603-Dimension-Domain-Target-Mismatch] There is a dimension-domain relationship from {conceptFrom} but its target element {conceptTo} is not a domain, in {refSource}.  Please change the relationship or change the type of the target element.
</message>

<!-- suggest showing path in the error message -->
<message code="EFM.6.16.04"
         level="error"
         module="ValidateFilingDimensions.py" line="101"
         args="linkrole linkroleDefinition hypercube dimension conceptFrom path">
[fs-1604-Domain-Is-Tangled]  Element {conceptFrom} appears in overlapping sets of members in a Directed Relationship Set in role {linkroleDefinition}; remove it as a target of one of its domain-member relationships. Please recheck submission.
</message>

<!-- same EFM text as above
<message code="EFM.6.16.04"
         level="error"
         module="ValidateFilingDimensions.py" line="124"
         args="linkrole conceptFrom path">
Domain-member primary-item relationships have an undirected cycle in DRS role {linkrole} 
starting from {conceptFrom}, 
path {path}
</message>
-->

<!-- reworded this message, the prior form was confusing and too XPE specific -->
<message code="EFM.6.16.05"
         level="error"
         module="ValidateFilingDimensions.py" line="109"
         args="hypercubeCount linkrole linkroleDefinition concept hypercubes">
[fs-1605-Primary-Element-Has-Redundant-Tables]  Element {concept} is a primary element of more than one Table in relationship group {linkroleDefinition}, to tables {hypercubes} in {refSources2_n}. Please modify the "all" relationships that have the element as a source so that it has only one primary axis.
</message>

<message code="EFM.6.16.06"
         level="error"
         module="ValidateFilingDimensions.py" line="41"
         args="hypercube linkrole primaryItem">
[fs-1606-Not-All-Relationship-Is-Closed] The notAll relationship for table {hypercube} must have the closed attribute set to 'false' so that it can achieve its intended purpose of excluding combinations of domain values, on relationship from {primaryItem}, in {refSource}. Please recheck submission.
</message>

<message code="EFM.6.16.07"
         level="error"
         module="ValidateFilingDimensions.py" line="81"
         args="dimension linkrole linkroleDefinition primaryItem">
[fs-1607-Axis-Excluded-Not-In-Table] Members of axis {dimension} are excluded, in role {linkroleDefinition}, from primary item {primaryItem} but not included in any table.  Please modify the relationships to make it consistent.
</message>

<message code="EFM.6.16.08"
         level="error"
         module="ValidateFilingDimensions.py" line="45"
         args="hypercube linkrole linkroleDefinition primaryItem">
[fs-1608-Table-Excludes-Itself] Element {hypercube} is a table that negates itself in {linkroleDefinition} for primary item {primaryItem}.  Modify the "all" and "notAll" relationships that have the element as a target.  Please recheck submission.
</message>

<message code="EFM.6.16.09"
         level="error"
         module="ValidateFilingDimensions.py" line="136"
         args="fromConcept toConcept linkrole linkroleDefinition arcroleURI arcrole">
[fs-1609-Target-Role-With-No-Consecutive-Relationships]  A table is malformed because the {arcroleURI} from {fromConcept} to {toConcept} in link role {linkroleDefinition} has no consecutive relationships, in {refSource}.  Remove the targetRole attribute, or provide a consecutive relationship.
</message>

<!-- all 6.16.09's have same args for SEC message purposes, thus share code
<message code="EFM.6.16.09"
         level="error"
         module="ValidateFilingDimensions.py" line="57"
         args="hypercube linkrole">
Table {hypercube} in DRS role {linkrole}, missing targetrole consecutive relationship
</message>

<message code="EFM.6.16.09"
         level="error"
         module="ValidateFilingDimensions.py" line="87"
         args="dimension linkrole">
Axis {dimension} in DRS role {linkrole}, missing targetrole consecutive relationship
</message>
-->

<message code="EFM.6.18.01"
         level="error"
         module="ValidateFiling.py" line="846"
         args="concept text xml">
[cp-1801-Custom-Element-Has-Reference] Your filing provides a reference, "{xml}", for a custom concept in extension taxonomy, {concept}.  Please remove this reference.
</message>

<message code="EFM.6.18.02"
         level="error"
         module="ValidateFiling.py" line="851"
         args="concept text xml">
[cp-1802-Standard-Element-Has-Reference] Your filing attempted to add a new reference, "{xml}", to an existing concept in the standard taxonomy, {concept}.  Please remove this reference.
</message>

<!-- suggest adding {namespaceConflicts} which lists the namespaces that conflict -->
<message code="EFM.6.22.03.incompatibleSchemas"
         level="error"
         module="ValidateFiling.py" line="1577"
         args="namespaceConflicts conflictClass">
[cp-2203-Incompatible-Schemas]  References for conflicting standard taxonomies {conflictClass} are not allowed in same DTS {namespaceConflicts}
</message>
<message code="EFM.6.22.03.incompatibleTaxonomyDocumentType"
         level="error"
         module="ValidateFiling.py" line="1582"
         args="documentType conflictClass">
[cp-2203-Incompatible-Taxonomy-DocumentType]  DocumentType {documentType} is incompatible with the {conflictClass} taxonomy.
</message>
<message code="EFM.6.22.03.incompatibleInlineDocumentType"
         level="error"
         module="ValidateFiling.py" line="1590"
         args="documentType conflictClass">
[cp-2203-Incompatible-Inline-DocumentType]  DocumentType {documentType} is incompatible with inline XBRL.
</message>
<message code="EFM.6.05.40.srtConceptsForIFRSConcepts"
         level="error"
         module="ValidateFiling.py" line="1590"
         args="ifrsSrtConceptsUsed">
[cp-0540-SRT-Concepts-For-IFRS-Concepts]  Taxonomy axis concepts from the SRT taxonomy should be used for the following IFRS axis concepts: {ifrsSrtConceptsUsed}.
</message>
<message code="EFM.6.05.40.srtMembersForSRTAxes"
         level="error"
         module="ValidateFiling.py" line="1590"
         args="ifrsSrtConceptsUsed">
[cp-0540-SRT-Members-For-SRT-Axes]  Taxonomy axes from the SRT taxonomy should use SRT or extension members for the following IFRS member concepts: {ifrsSrtConceptsUsed}.
</message>

<!-- Note: EFM 6.23 is not currently in effect.  WcH comments nested in here have been stripped of xml comment markup.
<message code="EFM.6.23.01"
         level="error"
         module="ValidateFiling.py" line="104"
         args="filename">
[rxd-2301-EX-2.01-Valid-File-Extension] The document type and naming of "{filename}" naming is not consistent with one or more of the following:

EX-2.01.INS - XBRL Instance document (Required) *.xml
EX-2.01.SCH - XBRL Taxonomy Extension Schema document *.xsd
EX-2.01.REF - XBRL Taxonomy Extension Reference Linkbase document *.xml
EX-2.01.CAL - XBRL Taxonomy Extension Calculation Linkbase document *.xml
EX-2.01.DEF - XBRL Taxonomy Extension Definition Linkbase document *.xml
EX-2.01.LAB - XBRL Taxonomy Extension Labels Linkbase document *.xml
EX-2.01.PRE - XBRL Taxonomy Extension Presentation Linkbase document *.xml

Please ensure that you comply with the document type and naming provided.
</message>

Note: WcH comments are not xml commented to allow whole section to be commented out
WcH 6.23.01.noLinkElement would be caught by EDGARLink but is useful for offline validation
<message code="EFM.6.23.01.noLinkElement"
         level="error"
         module="ValidateFilingDTS.py" line="610"
         args="filename">
[rxd-2301-EX-2.01-Valid-File-Extension] Invalid linkbase file name: {filename}, has no extended link element, cannot determine link type.
</message>

NOTE THAT EFM.6.23.02 can only be detected in Edgar, as Arelle will only load a single INS

<message code="EFM.6.23.03"
         level="error"
         module="ValidateFiling.py" line="860"
         args="contextID documentType submissionType">
[rxd-2303-EX-2.01-Document-Submission-Type-Value] The value for dei:DocumentType, {documentType}, does not match the submission type, {subType}.
</message>

<message code="EFM.6.23.04"
         level="error"
         module="ValidateFiling.py" line="860"
         args="contextID documentType exhibitType">
[rxd-2304-EX-101-Document-Type-Value] The value for dei:DocumentType, {documentType}, is not allowed for EX-101.INS attachments.
</message>

<message code="EFM.6.23.05"
         level="error"
         module="ValidateFiling.py" line="860"
         args="contextID documentType exhibitType">
[rxd-2305-EX-2.01-Document-Type-Value] The value for dei:DocumentType, {documentType}, is not allowed for EX-2.01.INS attachments. 
</message>

<message code="EFM.6.23.06"
         level="error"
         module="ValidateFiling.py" line="1004"
         args="documentType">
[rxd-2306-Amendment-Number-Existence] The value for dei:DocumentType, {documentType}, requires a value for rxd:AmendmentNumber in the Required Context.
</message>

<message code="EFM.6.23.07"
         level="error"
         module="ValidateFiling.py" line="1008"
         args="instance">
[rxd-2307-RXD-Schema-Existence] The DTS of {instance} must use a standard schema from Family SD in edgartaxonomies.xml.
</message>

<message code="EFM.6.23.08"
         level="error"
         module="ValidateFiling.py" line="975"
         args="instance">
[rxd-2308-RXD-Presentation-Existence] The DTS of {instance} must use a standard presentation linkbase from Family RXD in edgartaxonomies.xml.
</message>

<message code="EFM.6.23.09"
         level="error"
         module="ValidateFiling.py" line="979"
         args="instance">
[rxd-2309-RXD-Definition-Existence] The DTS of {instance} must use a standard definition linkbase from Family RXD in edgartaxonomies.xml.
</message>

<message code="EFM.6.23.10"
         level="error"
         module="ValidateFiling.py" line="967"
         args="instance">
[rxd-2310-RXD-Version-Value] The DTS of {instance} must use only one version of the RXD schema.
</message>

<message code="EFM.6.23.11"
         level="error"
         module="ValidateFiling.py" line="990"
         args="instance">
[rxd-2311-Country-Version-Value] The DTS of {instance} must use only one version of the COUNTRY schema.
</message>

<message code="EFM.6.23.12"
         level="error"
         module="ValidateFiling.py" line="1039"
         args="schemaName name concept">
[rxd-2312-Custom-Element-Value] {schemaName} contained a non-abstract declaration for {name} that is not a Text Block.  Use a standard element or change the type to Text Block.
</message>

<message code="EFM.6.23.13"
         level="error"
         module="ValidateFiling.py" line="1043"
         args="schemaName name concept">
[rxd-2313-Custom-Dimension-Existence] {schemaName} contained a declaration for {name} that is not allowed.  Use dimensions from a standard schema instead.</message>

<message code="EFM.6.23.14"
         level="error"
         module="ValidateFiling.py" line="1051"
         args="linkbaseName linkrole source target">
[rxd-2314-Dimension-Domain-Relationship-Existence] In {linkbaseName} the target of the dimension-domain relationship in role {linkrole} from {source} to {target} must be the default member of {source}.
</message>

<message code="EFM.6.23.15"
         level="error"
         module="ValidateFiling.py" line="1090"
         args="linkrole linkrole2 source target target2">
[rxd-2315-Consecutive-Domain-Member-Relationships-Existence] The domain-member relationship in {linkrole}s from {source}s to {target}s is consecutive with domain-member relationship in {linkrole2}s to {target2}s. 
</message>

<message code="EFM.6.23.16"
         level="error"
         module="ValidateFiling.py" line="1072"
         args="member dimension1 linkrole1 dimension2 linkrole2">
[rxd-2316-Member-Multiple-Axis-Existence] Member element {member} appears in more than one axis: {dimension1} and {dimension2}.  Use distinct members for the Project, Country, Government, Legal Entity, Business Segment and Payment Type axes. 
</message>

<message code="EFM.6.23.17"
         level="error"
         module="ValidateFiling.py" line="1078"
         args="member linkrole">
[rxd-2317-Payment-Type-Dimension-Value] The member {member} of dimension rxd:PaymentTypeAxis in link role {linkrole} must be a QName with namespace that begins with "http://xbrl.sec.gov/rxd/".
</message>

<message code="EFM.6.23.18"
         level="error"
         module="ValidateFiling.py" line="1082"
         args="member linkrole">
[rxd-2318-Country-Dimension-Member-Value] The member {member} of dimension rxd:CountryAxisAxis in link role {linkrole} must be a QName with namespace that begins with "http://xbrl.sec.gov/country/".
</message>

<message code="EFM.6.23.19"
         level="error"
         module="ValidateFiling.py" line="1170"
         args="context dimension">
[rxd-2319-Project-Payment-Amount-Existence] A payment for each project axis member is required.  Provide a value for element rxd:Pr with value {dimension} in context {context}.
</message>

<message code="EFM.6.23.20"
         level="error"
         module="ValidateFiling.py" line="1123"
         args="context dimension member fact">
[rxd-2320-Project-Payment-Type-Existence] A payments type for each project is required.  Provide a value for element rxd:P in context {context} with axis {dimension} and member {member}.
</message>

<message code="EFM.6.23.21"
         level="error"
         module="ValidateFiling.py" line="1178"
         args="context dimension member">
[rxd-2321-Government-Payment-Amount-Existence] A payment amount for each government is required.  Provide a value for element rxd:Gv with value {member}.
</message>

<message code="EFM.6.23.22"
         level="error"
         module="ValidateFiling.py" line="1123"
         args="context dimension member fact">
[rxd-2322-Government-Payment-Type-Existence] A total of payments for each government is required.  Provide a value for element rxd:Payments in context {context}.
</message>

<message code="EFM.6.23.23"
         level="error"
         module="ValidateFiling.py" line="1183"
         args="context paymentType">
[rxd-2323-Category-Total-Existence] Payment type {paymentType} was reported in context {context} but there is no fact with element {paymentType} in the Required Context.
</message>

<message code="EFM.6.23.24"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2324-Payment-Currency-Existence] The currency of each payment is required.  Provide a value for element rxd:Cu in context {context}.
</message>

<message code="EFM.6.23.25"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2325-Payment-Date-Existence] The financial period (fiscal year) of each payment is required.  Provide a value for element rxd:D in context {context}.
</message>

<message code="EFM.6.23.26"
         level="error"
         module="ValidateFiling.py" line="1023"
         args="fyEndDate reportingPeriod">
[rxd-2326-Fiscal-Year-End-Date-Value] The financial period {reportingPeriod} does not match the fiscal year end {fyEndDate}.
</message>

<message code="EFM.6.23.27"
         level="error"
         module="ValidateFiling.py" line="1030"
         args="reportingPeriod">
[rxd-2327-Payment-Financial-Period-Existence] The financial period {reportingPeriod} does not match rxd:D in any facts.
</message>

<message code="EFM.6.23.28"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2328-Payment-Government-Existence] The government receiving each payment is required.  Provide a fact for element rxd:Gv in context {context}.
</message>

<message code="EFM.6.23.29"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2329-Payment-Country-Existence] The country receiving each payment is required.  Provide a value for element rxd:Co in context {context}.
</message>

<message code="EFM.6.23.30"
         level="error"
         module="ValidateFiling.py" line="1104"
         args="fact value context domain">
[rxd-2330-Project-Value] The value of rxd:Pr must be a member of a Project Axis.  Change the value of rxd:Pr in context {context} to a member of rxd:ProjectAxis or add {value} to the members of rxd:ProjectAxis.
</message>

<message code="EFM.6.23.31"
         level="error"
         module="ValidateFiling.py" line="1104"
         args="fact value context domain">
[rxd-2331-Government-Value] The value of rxd:Gv must be a member of the Government Axis.  Change the value of rxd:Gv in context {context} to a member of rxd:GovernmentAxis or add {value} to the members of rxd:GovernmentAxis.
</message>

<message code="EFM.6.23.32"
         level="error"
         module="ValidateFiling.py" line="1192"
         args="value context endDate">
[rxd-2332-Date-Value] The value of rxd:D in context {context}, {value}, is not equal to {endDate}.  Change the context end date or the value.
</message>

<message code="EFM.6.23.33"
         level="error"
         module="ValidateFiling.py" line="1104"
         args="fact value context domain">
[rxd-2333-Segment-Value] The value of rxd:Sm must be a member of the Business Segment Axis.  Change the value of rxd:Sm in context {context} to a member of rxd:BusinessSegmentAxis or add {value} to the members of rxd:BusinessSegmentAxis.
</message>

<message code="EFM.6.23.34"
         level="error"
         module="ValidateFiling.py" line="1104"
         args="fact value context domain">
[rxd-2334-Entity-Value] The value of rxd:E must be a member of a Legal Entity Axis.  Change the value of rxd:E in context {context} to a member of rxd:LegalEntityAxis or add {value} to the members of rxd:LegalEntityAxis.
</message>

<message code="EFM.6.23.35"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2335-In-Kind-Method-Existence] rxd:Km has a value in context {context} if and only if the In-kind flag rxd:K is Y in that context. Provide both or neither.
</message>

<message code="EFM.6.23.36"
         level="error"
         module="ValidateFiling.py" line="901"
         args="contextID documentType elementName">
[rxd-2336-Reporting-Currency-Existence] The Required Context does not have a dei:EntityReportingCurrencyISOCode fact.
</message>

<message code="EFM.6.23.37"
         level="error"
         module="ValidateFiling.py" line="1148"
         args="fact context unit currency">
[rxd-2337-Payment-Unit-Value] An {fact} fact in context {context} has unit {unit} not matching the dei:EntityReportingCurrencyISOCode {currency}.
</message>

<message code="EFM.6.23.38"
         level="error"
         module="ValidateFiling.py" line="1155"
         args="context currency">
[rxd-2338-Conversion-Method-Value] A value cannot be given for rxd:Cm in context {context} because the payment is in the reporting currency {currency}.
</message>

<message code="EFM.6.23.39"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2339-Conversion-Method-Currency-Value] A value cannot be given for rxd:Cm in context {context} because there is not a non-nil rxd:Cu in that context.
</message>

<message code="EFM.6.23.40"
         level="error"
         module="ValidateFiling.py" line="1187"
         args="context">
[rxd-2340-Amount-Line-Existence] There is a fact with element rxd:A in context {context} not defining its payment number.
</message>

<message code="EFM.6.23.41"
         level="error"
         module="ValidateFiling.py" line="1161"
         args="context unit currency">
[rxd-2341-Amount-Currency-Existence] The unit {unit} of rxd:A in context {context} is not consistent with the value {currency} of rxd:Cu.  Change one or the other to match.
</message>

<message code="EFM.6.23.42"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2342-In-Kind-Amount-Existence] The in-kind flag fact rxd:K is in a context {context} without an amount rxd:A fact.  Remove the rxd:K fact or add an rxd:A fact in this context.</message>

<message code="EFM.6.23.43"
         level="error"
         module="ValidateFiling.py" line="1142"
         args="context fact1 fact2 fact2NotNil">
[rxd-2343-Project-Amount-Existence] The project name fact rxd:Pr is in a context {context} without an amount rxd:A fact.  Remove the rxd:Pr fact or add an rxd:A fact in this context.
</message>

<message code="EFM.6.23.44"
         level="error"
         module="ValidateFiling.py" line="1128"
         args="context value">
[rxd-2344- Country-Value] The value of rxd:Co in context {context}, {value}, is not in the domain of rxd:CountryAxis. Change the value of rxd:Co or add it {value} to the Country Axis.
</message>
-->

<message code="EFM.6.26.01"
         level="warning"
         module="EdgarRenderer/Cube.py" line="145"
         args="linkrole linkroleDefinition linkroleName axisSet">
[rq-2601-All-Facts-Filtered] The presentation group ''{linkroleName}'' contains {axisSet}, which has (have) no default member in the presentation group. Since every fact in the group is defaulted on this (these) axis (axes), all facts have been filtered out.
</message>

<message code="EFM.6.26.02"
         level="warning"
         module="EdgarRenderer/Filing.py" line="949"
         args="fact value preferredLabel preferredLabelValue startOrEnd date linkrole linkroleDefinition linkroleName">
[rq-2602-Instant-Without-Matching-Duration] In ''{linkroleName}'', fact {fact} with value {value} and preferred label {preferredLabelValue}, was not shown because there are no facts in a duration {startOrEnd} at {date}. Change the preferred label role or add facts.
</message>

<message code="EFM.6.26.03"
         level="warning"
         module="EdgarRenderer/Cube.py" line="273"
         args="linkrole linkroleDefinition linkroleName">
[rq-2603-No-Matching-Durations] The presentation group ''{linkroleName}'' is a statement of changes in equity, but it has no duration-type facts matching the instant-type facts shown.  Add duration-type facts that represent the changes from instant to instant, or do not label the presentation group a statement of changes.
</message>
<message code="EFM.6.26.04.embeddingCmdInvalidMember"
         level="error"
         module="EdgarRenderer/Embedding.py" line="634"
         args="linkrole linkroleDefinition linkroleName fact contextID members axis">
[rq-2604-Embedding-Command-Invalid-Member] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, the domain members {members} are not presentation descendants of {axis}.
</message>

<message code="EFM.6.26.04.embeddingCmdMalformedMember"
         level="error"
         module="EdgarRenderer/Filing.py" line="640"
         args="linkrole fact contextID linkroleDefinition linkroleName tokenlist">
[rq-2604-Embedding-Command-Malformed-Member] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, the keyword(s) {tokenlist} is not '*', a valid member qname or list of valid member qnames.
</message>

<message code="EFM.6.26.04.embeddingCmdMalformedAxis"
         level="error"
         module="EdgarRenderer/Filing.py" line="576"
         args="linkrole fact contextID linkroleDefinition linkroleName token position">
[rq-2604-Embedding-Command-Malformed-Axis] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, the token {token}, at position {position} in the list of tokens, is malformed. This token can only be 'period', 'unit', 'primary' or identify an Axis by its namespace prefix, underscore, and element name.
</message>

<message code="EFM.6.26.04.embeddingCmdMalformedDirectionToken"
         level="error"
         module="EdgarRenderer/Filing.py" line="533"
         args="linkrole fact contextID linkroleDefinition linkroleName token position">
[rq-2604-Embedding-Command-Malformed-Direction-Token] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, the token {token}, at position {position} in the list of tokens, is malformed. Each iterator can only start with 'row' or 'column'.
</message>

<message code="EFM.6.26.04.embeddingCmdMalformedStyleToken"
         level="error"
         module="EdgarRenderer/Filing.py" line="609"
         args="linkrole fact contextID linkroleDefinition linkroleName style">
[rq-2604-Embedding-Command-Malformed-Style-Token] In ''{linkroleName}'', the embedded report created by the fact {fact}, with the context {contextID}, the style keyword {style} is not one of 'compact' or 'nodisplay'.
</message>

<message code="EFM.6.26.05.embeddingCmdMissingIterator"
         level="error"
         module="EdgarRenderer/Embedding.py" line="241"
         args="linkrole linkroleDefinition linkroleName fact contextID iftransposed roworcol colorrow axes">
[rq-2605-Embedding-Command-Missing-Iterator] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, there are no valid {roworcol} commands{iftransposed}. Change one of the {axes} to a {colorrow} or add a {roworcol} command with an additional axis.
</message>

<message code="EFM.6.26.05.embeddingCmdMissingIteratorAfterTransposition"
         level="error"
         module="EdgarRenderer/Embedding.py" line="241"
         args="linkrole linkroleDefinition linkroleName fact contextID iftransposed roworcol colorrow axes">
[rq-2605-Embedding-Command-Missing-Iterator-After-Transposition] In ''{linkroleName}'', the embedded report created by the fact {fact} with the context {contextID}, there are no valid {roworcol} commands{iftransposed}. Change one of the {axes} to a {colorrow} or add a {roworcol} command with an additional axis.
</message>

<message code="EFM.6.26.06"
         level="warning"
         module="EdgarRenderer/Embedding.py" line="147"
         args="linkrole linkroleDefinition linkroleName error axis embeddedCommand fact contextID">
[rq-2606-Axis-Has-No-Order] In ''{linkroleName}'', the embedded report created by the fact {fact} with context {contextID}, the axis {axis} was not given an order in the presentation group {linkroleDefinition}. The axes are being sorted by their labels.
</message>

<message code="EFM.6.26.07"
         level="warning"
         module="EdgarRenderer/Report.py" line="1793"
         args="linkrole linkroleDefinition linkroleName fact contextID">
[rq-2607-Bar-Chart-Has-No-Facts] In ''{linkroleName}'', the embedded report created by the fact {fact} with context {contextID}, is a bar chart figure that has zero facts. If a bar chart figure is not wanted here, consider removing the text block fact; otherwise, determine why all its facts are being filtered out.
</message>

<message code="EFM.6.26.08"
         level="error"
         module="EdgarRenderer/Report.py" line="1194"
         args="linkrole linkroleDefinition linkroleName fact contextID numYears">
[rq-2608-Too-Many-Annual-Return-Facts] In ''{linkroleName}'', the embedded report created by the fact {fact} with context {contextID}, there are {numYears} Annual Return Facts, but there must not be more than 20.
</message>

<message code="EFM.6.26.09"
         level="warning"
         module="EdgarRenderer/Embedding.py" line="589"
         args="linkrole linkroleDefinition linkroleName fact contextID">
[rq-2609-Primary-Axis-On-Rows] In ''{linkroleName}'' the embedded report created by the fact {fact} with context {contextID} contains an iterator "column primary" even though the definition text of {linkroleDefinition} contains the "{{Elements}" qualifier. The primary axis will remain on the rows.
</message>

<!--  Templated messages 
Example:
    <message code="dq-{efmSection}-{nameOfTag}-Blah-Blah">Submission type {subType} {severityVerb} blah blah blah in {context}. {refSources}</message>
--> 
<message code="dq-{efmSection}-{tag}-Missing">Submission type {subType} {severityVerb} have a non-empty value for {tag} in {context}. {refSources}</message>
<message code="dq-{efmSection}-{tags}-Missing">Submission type {subType} {severityVerb} have a non-empty value for at least one of {tags} in {context}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-Unexpected">Submission type {subType} {severityVerb} not have a value for {tag} in the {context}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{value}">In submission type {subType}, {tag} value {severityVerb} have {value} in the {context}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-Value">In submission type {subType}, {tag} value {severityVerb} have {value} in the {context}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}">In submission type {subType}, {tag} value {severityVerb} have value &quot;{value}&quot; in the same context as {otherTag}, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Missing">In submission type {subType}, {tag} requires {otherTag} in the same context, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-Value-{otherTag}-Missing">In submission type {subType}, {tag} value &quot;{value}&quot; requires {otherTag} in the same context, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTags}-Missing">In submission type {subType}, {tag} requires a non-empty value for at least one of {otherTags} in the same context, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Exclusive">In submission type {subType}, either {tag} or {otherTag} {severityVerb} have a value, but not both, in context, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tags}-Exclusive">In submission type {subType}, only one of {tags} {severityVerb} have a value, but not both, in context, {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tags}-Exclusive-Values">In submission type {subType}, exactly one of {tags} {severityVerb} have the value &quot;{value}&quot; and the others {severityVerb} have the value &quot;{otherValue}&quot;.</message>
<message code="dq-{efmSection}-{tags}-Exclusive-Value">In submission type {subType}, only one of {tags} {severityVerb} have a value {value}.</message>
<message code="dq-{efmSection}-{tags}-Inclusive">In submission type {subType}, at least one of {tags} {severityVerb} have a value. {refSources}</message>
<message code="dq-{efmSection}-{tags}-Both">In submission type {subType}, both or neither of {tags} {severityVerb} have a value. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Dependency">In submission type {subType}, {tag} {severityVerb} have a value if and only if {otherTag} has a value in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTags}-Dependency">In submission type {subType}, {tag} {severityVerb} have a value if one of {otherTags} has a value in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Dependent-Value">In submission type {subType}, {tag} {severityVerb} be provided if and only if {otherTag} has value &quot;{value}&quot; in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Inclusive">In submission type {subType}, either {tag} or {otherTag} should have a value, or both. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{otherTag}-Exclusive-Dependency">In submission type {subType}, {tag} {severityVerb} have a value if and only if {otherTag} has a value in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tags}-{otherTag}-Exclusive-Dependency">In submission type {subType}, one of {tags} {severityVerb} have a value if and only if {otherTag} has a value in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tags}-{otherTags}-Exclusive-Dependency">In submission type {subType}, one of {tags} {severityVerb} have a value if one of {otherTags} has a value in context {contextID}. {refSources}</message>
<message code="dq-{efmSection}-{tag}-{headerTag}-Dependency">In submission type {subType}, {tag} {severityVerb} have a value if and only if header element {headerTag} is provided." {refSources}</message>
<message code="dq-{efmSection}-{tag}-{headerTag}-Dependent-Value">In submission type {subType}, when {tag} has a value &quot;{value}&quot;, header element {headerTag} {severityVerb} have a value &quot;{otherValue}&quot;. {refSources}</message>
<message code="dq-{efmSection}-{tag}-Security-Axes">In submission type {subType}, {tag} {severityVerb} have values without axes if a single non-ADR member, otherwise in separate contexts by axis member, but not both, in contexts {contextIDs}. {refSources}</message>
<message code="dq-0514-Hidden-Cover-Page-Fact-Not-Referenced">Submission type {subType} has {n} cover page fact(s) in ix:hidden that were not referenced by any -sec-ix-hidden style property: (namesOfTags). {refSources}</message>
<message code="dq-0540-{tag}-Value">In submission type {subType}, {tag} value &quot;{value}&quot;, is not equivalent to header element {headerTag} value &quot;{valueOfHeaderTag}&quot; in the {context}. {refSources}</message>
<message code="dq-0540-CurrentFiscalYearEndDate-Registrant-Value">In submission type {subType}, {tag} value &quot;{value}&quot;, {severityVerb} match the Entity Registrant Fiscal Year End Date &quot;{valueOfHeaderTag}&quot; on record within EDGAR. {refSources}</message>
<message code="dq-0540-CurrentFiscalYearEndDate-Submission-Value">In submission type {subType}, {tag} value &quot;{value}&quot;, does not match the Submission Header Fiscal Year End Date &quot;{valueOfHeaderTag}&quot;. {refSources}</message>
<message code="dq-0540-{headerTag}-Unexpected">Header element {headerTag} value &quot;{value}&quot; is not applicable for {subType} submission type." {refSources}</message>


<!-- these need attention
<message code="EFM.N/A"
         level="error"
         module="ValidateFiling.py" line="1065"
         args="linkrole conceptFrom order conceptTo conceptTo2">
Duplicate calculations relations from concept {conceptFrom} for order {order} in base set role {linkrole} to concept {conceptTo} and to concept {conceptTo2}
</message>

<message code="EFM.N/A"
         level="error"
         module="ValidateFiling.py" line="363"
         args="fact contextID value text">
ix-numeric Fact {fact} of context {contextID} has a sign or currency symbol "{value}" in "{text}"
</message>

<message code="EFM.N/A"
         level="error"
         module="ValidateXbrlDTS.py" line="860"
         args="footnoteID arcrole">
Inline XBRL footnote {footnoteID} must be in non-displayable div due to arcrole {arcrole}
</message>

<message code="EFM.N/A"
         level="error"
         module="ValidateXbrlDTS.py" line="866"
         args="footnoteID">
Inline XBRL non-empty footnote {footnoteID} is not referenced by any fact
</message>

<message code="EFM.N/A"
         level="error"
         module="ValidateXbrlDTS.py" line="871"
         args="footnoteID">
Inline XBRL footnote {footnoteID} is missing an xml:lang attribute
</message>
-->

<!-- FASB messages
<message code="FASB:deprecatedConcept"
         level="info-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="197"
         args="concept date documentation">
Unused concept {concept} has extension relationships and was deprecated on {date}: {documentation}
</message>

<message code="FASB:deprecatedConcept"
         level="info-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="202"
         args="concept date">
Unused concept {concept} has extension relationships was deprecated on {date}
</message>
-->

<!-- general file loading messages
<message code="FileNotLoadable"
         level="error"
         module="ModelDocument.py" line="73"
         args="fileName">
File can not be loaded: {fileName} 
Loading terminated.
</message>

<message code="FileNotLoadable"
         level="error"
         module="ModelDocument.py" line="77"
         args="fileName">
File can not be loaded: {fileName}
</message>
-->

<!-- GFM, HMRC, and SBR messages omitted -->

<!-- US Best Practices messages
<message code="US-BPG.1.7.1"
         level="info-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="181"
         args="concept">
Company extension concept is unused: {concept}
</message>

<message code="US-BPG.1.7.1"
         level="info-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="207"
         args="concept">
Company extension relationships of unused standard concept: {concept}
</message>

<message code="US-BPG.2.4.1"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="110"
         args="fact contextID unitID value insignificantValue">
Decimal disagreement {fact} in context {contextID} unit {unitID} value {value} has insignificant value {insignificantValue}
</message>

<message code="US-BPG.2.5.1"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="121"
         args="fact contextID value">
Disclosure {fact} in context {contextID} value {value} is a fraction
</message>

<message code="US-BPG.testingException"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="147"
         args="fact contextID unitID value err">
{fact} in context {contextID} unit {unitID} value {value} cannot be tested due to: {err}
</message>

<message code="US-BPG:missingCalculation"
         level="warning-semantic"
         module="examples/plugin/validateUSBestPractices.py" line="309"
         args="">
(dynamic)
</message>
-->

<!-- other messages
<message code="arelle:hrefWarning"
         level="warning"
         module="ModelDocument.py" line="755"
         args="modelObejct">
Locator href attribute missing or malformed in non-standard extended link
</message>

<message code="arelle:htmlIOError"
         level="exception"
         module="ViewFile.py" line="270"
         args="file type error">
Failed to save output {type} to {file}: \s{error}
</message>

<message code="arelle:info"
         level="info"
         module="ValidateXbrl.py" line="305"
         args="count namespace">
{count} facts have deprecated transformation namespace {namespace}
</message>
-->

<!-- validateInfoset messages skipped -->

<!--
<message code="arelle:multipleOutputInstances"
         level="info"
         module="ValidateFormula.py" line="314"
         args="xlinkLabel instanceTo instanceTo2">
Multiple output instances for formula {xlinkLabel}, to names {instanceTo}, {instanceTo2}
</message>

<message code="arelle:nonNegFactTestException"
         level="warning-semantic"
         module="examples/plugin/validateSecTagging.py" line="199"
         args="fact contextID unitID value elrTypes">
{fact} in context {contextID} unit {unitID} value {value}{elrTypes} cannot be tested nonnegative
</message>

<message code="arelle:notLoaded"
         level="error"
         module="Validate.py" line="142"
         args="modelXbrl id name file">
Testcase {id} {name} document not loaded: {file}
</message>

<message code="arelle:notLoaded"
         level="error"
         module="Validate.py" line="176"
         args="modelXbrl id name file">
Testcase {id} {name} DTSes not loaded, unable to generate versioning report: {file}
</message>

<message code="arelle:notLoaded"
         level="error"
         module="Validate.py" line="204"
         args="modelXbrl id name file">
Testcase {id} {name} result infoset not loaded: {file}
</message>

<message code="arelle:notLoaded"
         level="error"
         module="Validate.py" line="239"
         args="modelXbrl id name file">
Testcase {id} {name} expected result instance not loaded: {file}
</message>

<message code="arelle:notLoaded"
         level="error"
         module="examples/plugin/validateUSBestPractices.py" line="36"
         args="modelXbrl file">
US-GAAP documentation not loaded: {file}
</message>

<message code="arelle:notLoaded"
         level="error"
         module="examples/plugin/validateUSBestPractices.py" line="69"
         args="modelXbrl file">
US-GAAP calculations not loaded: {file}
</message>

<message code="arelle:notValdated"
         level="info"
         module="Validate.py" line="57"
         args="modelXbrl file">
Validation skipped, document not successfully loaded: {file}
</message>

<message code="arelle:rssWatch"
         level="info"
         module="WatchRss.py" line="176"
         args="modelXbrl">
(dynamic)
</message>

<message code="arelle:unrecognizedFactListColumn"
         level="error"
         module="ViewFileFactList.py" line="30"
         args="modelXbrl cols">
Unrecognized columns: {cols}
</message>

<message code="arelle:unrecognizedTestReportColumn"
         level="error"
         module="ViewFileTests.py" line="29"
         args="modelXbrl cols">
Unrecognized columns: {cols}
</message>

<message code="arelle:variableSetFilterCovered"
         level="warning"
         module="ValidateFormula.py" line="500"
         args="xlinkLabel filterLabel">
Variable set {xlinkLabel}, filter {filterLabel}, cannot be covered
</message>

<message code="arelleLinfo"
         level="info"
         module="ModelXbrl.py" line="517"
         args="priItem">
Create context for {priItem}, cannot determine valid context elements, no suitable hypercubes
</message>

<message code="arelleLinfo"
         level="info"
         module="ModelXbrl.py" line="538"
         args="dimension">
Create context, {dimension}, cannot determine context element, either no all relationship or validation issue
</message>

<message code="asrtNoLog"
         level="(dynamic)"
         module="ValidateFormula.py" line="746"
         args="assertionResults">
(dynamic)
</message>

<message code="cfcn:testFail"
         level="error"
         module="ValidateFormula.py" line="130"
         args="name result">
Test {name} result {result}
</message>

<message code="cfcn:testPass"
         level="info"
         module="ValidateFormula.py" line="126"
         args="name result">
Test {name} result {result}
</message>

<message code="err:XPST0003"
         level="error"
         module="XPathParser.py" line="721"
         args="name error source">
Parse error in {name} error: {error} 
{source}
</message>

<message code="err:XPST0008"
         level="error"
         module="ValidateFormula.py" line="1083"
         args="xlinkLabel name">
Undefined variable dependency in message {xlinkLabel}, {name}
</message>

<message code="err:XPST0010"
         level="error"
         module="XPathParser.py" line="96"
         args="axis step">
Axis {axis} is not supported in {step}
</message>

<message code="err:XPST0081"
         level="error"
         module="XPathParser.py" line="113"
         args="name">
QName prefix not defined for {name}
</message>

<message code="err:XPST0081"
         level="error"
         module="XPathParser.py" line="181"
         args="token">
wildcard prefix not defined for {token}
</message>

<message code="err:XPST0081"
         level="error"
         module="XPathParser.py" line="291"
         args="variable">
QName prefix not defined for variable reference ${variable}
</message>

<message code="exception"
         level="error"
         module="CntlrGenVersReports.py" line="282"
         args="error excelRow exc_info">
Exception: {error}, Excel row: {excelRow}
</message>

<message code="exception"
         level="error"
         module="Validate.py" line="67"
         args="modelXbrl testcase error exc_info">
Testcase validation exception: {error}, testcase: {testcase}
</message>

<message code="exception"
         level="error"
         module="Validate.py" line="77"
         args="modelXbrl reportFile error exc_info">
Versioning report exception: {error}, testcase: {reportFile}
</message>

<message code="exception"
         level="error"
         module="Validate.py" line="88"
         args="modelXbrl instance error exc_info">
Instance validation exception: {error}, instance: {instance}
</message>

<message code="exception"
         level="error"
         module="examples/plugin/saveInfoset.py" line="72"
         args="error modelXbrl exc_info">
Infoset generation exception: {error}
</message>

<message code="exception"
         level="error"
         module="examples/plugin/saveSKOS.py" line="186"
         args="error modelXbrl exc_info">
SKOS generation exception: {error}
</message>

<message code="exception"
         level="error"
         module="examples/plugin/updateTableLB.py" line="207"
         args="error modelXbrl exc_info">
Updated table linkbase generation exception: {error}
</message>

<message code="exception"
         level="error"
         module="examples/plugin/validateSecTagging.py" line="297"
         args="error modelXbrl exc_info">
SEC DTS Tags Matches exception: {error}
</message>

<message code="exception"
         level="exception"
         module="ViewWinXml.py" line="41"
         args="error exc_info">
Validation exception: \s{error}
</message>
-->

<!--
<message code="formula:expectedFactMissing"
         level="error"
         module="Validate.py" line="258"
         args="modelXbrl fact">
Formula output missing expected fact {fact}
</message>

<message code="formula:internalError"
         level="error"
         module="ModelFormulaObject.py" line="196"
         args="element">
Invalid formula object {element}
</message>

<message code="formula:maxRunTime"
         level="info"
         module="ValidateFormula.py" line="718"
         args="mins">
Formula execution ended after {mins} minutes
</message>

<message code="formula:resultFactCounts"
         level="error"
         module="Validate.py" line="246"
         args="modelXbrl countFacts expectedFacts">
Formula output {countFacts} facts, expected {expectedFacts} facts
</message>

<message code="formula:time"
         level="info"
         module="FormulaEvaluator.py" line="120"
         args="xlinkLabel count time">
Variable set {xlinkLabel} skipped evaluation {count}: {time} sec
</message>

<message code="formula:time"
         level="info"
         module="FormulaEvaluator.py" line="144"
         args="xlinkLabel count time">
Variable set {xlinkLabel} precondition blocked evaluation {count}: {time} sec
</message>

<message code="formula:time"
         level="info"
         module="FormulaEvaluator.py" line="187"
         args="xlinkLabel count time">
Variable set {xlinkLabel} completed evaluation {count}: {time} sec
</message>

<message code="formula:time"
         level="info"
         module="FormulaEvaluator.py" line="68"
         args="xlinkLabel count time">
Variable set {xlinkLabel} time for {count} evaluations: {time}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaConsisAsser.py" line="105"
         args="id result">
Consistency assertion {id} result {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaConsisAsser.py" line="25"
         args="id xlinkLabel derivedFact">
Consistency assertion {id} formula {xlinkLabel} fact {derivedFact} has zero precision and no radius is defined, skipping consistency assertion
</message>

<message code="formula:trace"
         level="info"
         module="FormulaConsisAsser.py" line="51"
         args="id xlinkLabel derivedFact">
Consistency assertion {id} formula {xlinkLabel} no input facts matched to {derivedFact}, skipping consistency assertion
</message>

<message code="formula:trace"
         level="info"
         module="FormulaConsisAsser.py" line="79"
         args="id xlinkLabel derivedFact">
Consistency assertion {id} formula {xlinkLabel} input fact matched to {derivedFact} has zero precision and no radius, skipping consistency assertion
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="105"
         args="xlinkLabel">
Variable set {xlinkLabel} skipped evaluation, all fact variables have fallen back
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="114"
         args="xlinkLabel">
Variable set {xlinkLabel} skipped non-different or fallback evaluation, duplicates another evaluation
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="137"
         args="xlinkLabel precondition result">
Variable set {xlinkLabel} 
Precondition {precondition} 
Result: {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="173"
         args="variableSetType xlinkLabel result">
{variableSetType} {xlinkLabel} 
Result: 
{result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="234"
         args="variable factCount">
Fact Variable {variable}: start with {factCount} facts previously cached after explicit filters
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="247"
         args="variable factCount">
Fact Variable {variable}: start with {factCount} facts previously cached before variable filters
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="254"
         args="variable factCount">
Fact Variable {variable} filtering: start with {factCount} facts
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="282"
         args="variable result">
Fact Variable {variable}: filters result {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="288"
         args="variable result">
Fact Variable {variable}: fallbackValue result {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="302"
         args="variable result">
General Variable {variable}: select result {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="321"
         args="variableType variable result">
{variableType} {variable}: bound value {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="350"
         args="variable filterType filter xlinkLabel factCount">
Fact Variable {variable} {filterType} {filter} filter {xlinkLabel} passes {factCount} facts
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="380"
         args="variable aspect factCount">
Fact Variable {variable} implicit filter {aspect} passes {factCount} facts
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="57"
         args="xlinkLabel result">
Existence Assertion {xlinkLabel} 
Result: {result}
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="64"
         args="xlinkLabel">
Variable set {xlinkLabel} had no xpCtx.evaluations
</message>

<message code="formula:trace"
         level="info"
         module="FormulaEvaluator.py" line="79"
         args="xlinkLabel evaluations variables">
Variable set {xlinkLabel} evaluations: {evaluations} x {variables}
</message>

<message code="formula:trace"
         level="info"
         module="FunctionCustom.py" line="49"
         args="cfi step expression">
{cfi} step {step} 
Expression: 
{expression}
</message>

<message code="formula:trace"
         level="info"
         module="FunctionCustom.py" line="55"
         args="cfi step expression">
{cfi} step {step} 
Result: 
{expression}
</message>

<message code="formula:trace"
         level="info"
         module="FunctionCustom.py" line="64"
         args="cfi expression">
{cfi} output 
Expression: 
{expression}
</message>

<message code="formula:trace"
         level="info"
         module="FunctionCustom.py" line="70"
         args="cfi expression">
{cfi} output 
Result: 
{expression}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="116"
         args="name result">
{name} result {result}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="245"
         args="name input">
Parameter {name} input value {input}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="251"
         args="name result">
Parameter {name} select result {result}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="385"
         args="xlinkLabel name dependencies">
Variable set {xlinkLabel}, variable {name}, dependences {dependencies}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="453"
         args="xlinkLabel dependencies">
Variable set {xlinkLabel}, variables order: {dependencies}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="459"
         args="xlinkLabel dependencies">
Variable set {xlinkLabel}, instance dependences {dependencies}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="580"
         args="dependencies">
Variable instances processing order: {dependencies}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="679"
         args="modelXbrl ids">
Formua/assertion IDs restriction: {ids}
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="728"
         args="assertionType id satisfiedCount notSatisfiedCount">
{assertionType} Assertion {id} evaluations : {satisfiedCount} satisfied, {notSatisfiedCount} not satisfied
</message>

<message code="formula:trace"
         level="info"
         module="ValidateFormula.py" line="740"
         args="id satisfiedCount notSatisfiedCount">
Consistency Assertion {id} evaluations : {satisfiedCount} satisfied, {notSatisfiedCount} not satisfied
</message>

<message code="formula:trace"
         level="info"
         module="XPathParser.py" line="700"
         args="name source">
Source {name} {source}
</message>

<message code="formula:trace"
         level="info"
         module="XPathParser.py" line="715"
         args="name source">
Code {name} {source}
</message>
-->

<!-- don't modify info messages
<message code="info"
         level="info"
         module="ModelXbrl.py" line="1000"
         args="entryFile packageOutputFile numberOfFiles">
DTS of {entryFile} has {numberOfFiles} files packaged into {packageOutputFile}
</message>

<message code="info"
         level="info"
         module="Validate.py" line="110"
         args="id name expected">
Variation {id} {name}: {expected}
</message>

<message code="info"
         level="info"
         module="Validate.py" line="97"
         args="modelDocument">
Testcase
</message>

<message code="info"
         level="info"
         module="ValidateFormula.py" line="146"
         args="error">
Formula validation skipped due to {error} error
</message>

<message code="info"
         level="info"
         module="ViewFile.py" line="268"
         args="file type">
Saved output {type} to {file}
</message>

<message code="info"
         level="info"
         module="examples/plugin/hello_dolly.py" line="44"
         args="">
(dynamic)
</message>

<message code="info:duplicatedSchema"
         level="warning"
         module="ModelDocument.py" line="160"
         args="targetNamespace fileName otherFileName">
Schema file with same targetNamespace {targetNamespace} loaded from {fileName} and {otherFileName}
</message>

<message code="info:lxmlSchemaValidator"
         level="info"
         module="examples/plugin/validateSchemaLxml.py" line="78"
         args="">
(dynamic)
</message>

<message code="info:lxmlSchemaValidator"
         level="info"
         module="examples/plugin/validateSchemaLxml.py" line="87"
         args="modelDocument">
(dynamic)
</message>

<message code="info:packageDTS"
         level="info"
         module="examples/plugin/saveDTS.py" line="18"
         args="">
Python's zlib module is not available, output is not compressed.
</message>

<message code="info:packageDTS"
         level="info"
         module="examples/plugin/saveDTS.py" line="30"
         args="entryFile numberOfFiles packageOutputFile">
DTS of {entryFile} has {numberOfFiles} files packaged into {packageOutputFile}.
</message>

<message code="info:profileStats"
         level="info"
         module="ModelXbrl.py" line="932"
         args="profileStats">
(dynamic)
</message>

<message code="info:saveInfoset"
         level="info"
         module="examples/plugin/saveInfoset.py" line="38"
         args="entryFile numberOfFacts infosetOutputFile">
Infoset of {entryFile} has {numberOfFacts} facts in infoset file {infosetOutputFile}.
</message>

<message code="info:saveSKOS"
         level="info"
         module="examples/plugin/saveSKOS.py" line="153"
         args="entryFile numberOfConcepts skosOutputFile">
SKOS of {entryFile} has {numberOfConcepts} concepts in SKOS RDF file {skosOutputFile}.
</message>

<message code="info:saveSecDtsTagMatches"
         level="info-semantic"
         module="examples/plugin/validateSecTagging.py" line="262"
         args="entryFile numberOfTwoWayPriItems numberOfOneWayPriItems numberOfTwoWayMembers secDtsTagMatchesFile">
SecDtsTagMatches entry {entryFile} has {numberOfTwoWayPriItems} two way primary items, {numberOfOneWayPriItems} one way primary items, {numberOfTwoWayMembers} two way members in output file {secDtsTagMatchesFile}.
</message>

<message code="info:updateTableLinkbase"
         level="info"
         module="examples/plugin/updateTableLB.py" line="174"
         args="entryFile numberOfLinkroles numberOfTables tableLBOutputFile">
Updated Table Linkbase of {entryFile} has {numberOfLinkroles} linkroles, {numberOfTables} tables in file {tableLBOutputFile}.
</message>

<message code="ix.13.1.2:tupleOrder"
         level="error"
         module="ValidateXbrl.py" line="633"
         args="fact order">
Fact {fact} must not have an order ({order}) unless in a tuple
</message>

<message code="ix.13.1.2:tupleOrder"
         level="error"
         module="ValidateXbrl.py" line="654"
         args="fact tuple">
Fact {fact} missing an order in tuple {tuple}
</message>

<message code="ix.13.1.2:tupleRecursion"
         level="error"
         module="ValidateXbrl.py" line="650"
         args="fact tuple">
Fact {fact} is recursively nested in tuple {tuple}
</message>

<message code="ix.13.1.2:tupleRefMissing"
         level="error"
         module="ModelDocument.py" line="906"
         args="tupleRef">
Inline XBRL tupleRef {tupleRef} not found
</message>

<message code="ix.14.2:invalidTransformation"
         level="error"
         module="ValidateXbrl.py" line="621"
         args="fact namespace">
Fact {fact} has unrecognized transformation namespace {namespace}
</message>

<message code="ix.14.2:invalidTransformation"
         level="error"
         module="ValidateXbrl.py" line="625"
         args="fact name">
Fact {fact} has unrecognized transformation name {name}
</message>

<message code="ix:missingContextRef"
         level="error"
         module="ValidateXbrl.py" line="610"
         args="fact">
Fact {fact} is missing a contextRef
</message>

<message code="ix:missingUnitRef"
         level="error"
         module="ValidateXbrl.py" line="614"
         args="fact">
Fact {fact} is missing a unitRef
</message>

<message code="ixTransform:valueError"
         level="error"
         module="XmlValidate.py" line="89"
         args="element fact transform typeName value">
Inline element {element} fact {fact} type {typeName} transform {transform} value error: {value}
</message>

<message code="parser:unableToParse"
         level="error"
         module="XPathParser.py" line="728"
         args="name error source">
Parsing terminated in {name} due to error: {error} 
{source}
</message>
-->

<!-- sec staff observation plugin messages
<message code="secStaffObservation.nonNegativeFact.inconsistency.C"
         level="inconsistency"
         module="examples/plugin/validateSecTagging.py" line="168"
         args="fact contextID unitID value elrTypes">
Negative fact of an explicit non-negative concept: {fact} in context {contextID} unit {unitID} value {value} {elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.inconsistency.G"
         level="inconsistency"
         module="examples/plugin/validateSecTagging.py" line="194"
         args="fact contextID unitID value elrTypes">
Negative fact of a "presumed by default" non-negative concept: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.info.A"
         level="info-semantic"
         module="examples/plugin/validateSecTagging.py" line="158"
         args="fact contextID unitID value elrTypes">
Negative fact of an explicit non-negative concept is tagged with a member expected to allow negative values: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.info.D"
         level="info-semantic"
         module="examples/plugin/validateSecTagging.py" line="175"
         args="fact contextID unitID value elrTypes">
Negative fact of concept expected to have positive and negative values: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.info.E"
         level="info-semantic"
         module="examples/plugin/validateSecTagging.py" line="184"
         args="fact contextID unitID value elrTypes">
Negative fact for typically non-negative concept, but tagged with a member expected to allow negative values: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.warning.B"
         level="warning-semantic"
         module="examples/plugin/validateSecTagging.py" line="163"
         args="fact contextID unitID value elrTypes">
Negative fact of an explicit non-negative concept, member may or not justify a negative value: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>

<message code="secStaffObservation.nonNegativeFact.warning.F"
         level="warning-semantic"
         module="examples/plugin/validateSecTagging.py" line="189"
         args="fact contextID unitID value elrTypes">
Negative fact of a typically non-negative concept, member may or not justify a negative value: {fact} in context {contextID} unit {unitID} value {value}{elrTypes}
</message>
-->

<!-- table linkbase messages
<message code="table:info"
         level="info"
         module="ValidateFormula.py" line="1000"
         args="xlinkLabel conceptQname">
RuleAxis rule {xlinkLabel} contains a concept QName {conceptQname} which is not in the DTS.
</message>

<message code="table:info"
         level="info"
         module="ValidateFormula.py" line="1008"
         args="axis xlinkLabel qnameAttr qname">
{axis} rule {xlinkLabel} contains a {qnameAttr} QName {qname} which is not in the DTS.
</message>

<message code="table:info"
         level="info"
         module="ValidateFormula.py" line="978"
         args="xlinkLabel memQname">
RuleAxis rule {xlinkLabel} contains a member QName {memQname} which is not in the DTS.
</message>

<message code="table:info"
         level="info"
         module="ValidateFormula.py" line="995"
         args="xlinkLabel qnSource">
RuleAxis rule {xlinkLabel} contains a @source attribute {qnSource} which is not applicable to table rule axes.
</message>
-->

<!-- UTR validation message
<message code="utr:invalid"
         level="error"
         module="ValidateUtr.py" line="165"
         args="unitID element typeName">
Unit {unitID} disallowed on fact {element} of type {typeName}
</message>
-->

<!-- versioning messages omitted -->

<!-- standard xbrl messages
<message code="xbrl.3.5.1.1:simpleLinkType"
         level="error"
         module="ValidateXbrlDTS.py" line="630"
         args="element">
Element {element} missing xlink:type="simple"
</message>

<message code="xbrl.3.5.1.2:simpleLinkHref"
         level="error"
         module="ValidateXbrlDTS.py" line="635"
         args="element">
Element {element} missing or invalid href
</message>

<message code="xbrl.3.5.1.3:emptySimpleLinkRole"
         level="error"
         module="ValidateXbrlDTS.py" line="683"
         args="xlinkRole">
Simple link role {xlinkRole} is empty
</message>

<message code="xbrl.3.5.1.4:emptyXlinkArcrole"
         level="error"
         module="ValidateXbrlDTS.py" line="740"
         args="element">
Arcrole on {element} is empty
</message>

<message code="xbrl.3.5.2.4:missingRoleRef"
         level="error"
         module="ValidateXbrlDTS.py" line="707"
         args="xlinkRole">
Role {xlinkRole} is missing a roleRef
</message>

<message code="xbrl.3.5.2.4:roleNotAbsolute"
         level="error"
         module="ValidateXbrlDTS.py" line="693"
         args="xlinkRole">
Role {xlinkRole} is not absolute
</message>

<message code="xbrl.3.5.2.5:arcroleNotAbsolute"
         level="error"
         module="ValidateXbrlDTS.py" line="745"
         args="element arcrole">
Arcrole {arcrole} is not absolute
</message>

<message code="xbrl.3.5.2.5:missingArcroleRef"
         level="error"
         module="ValidateXbrlDTS.py" line="755"
         args="element arcrole">
Arcrole {arcrole} is missing an arcroleRef
</message>

<message code="xbrl.3.5.3.3:emptyStdExtLinkRole"
         level="error"
         module="ValidateXbrlDTS.py" line="688"
         args="xlinkRole">
Standard extended link role {xlinkRole} is empty
</message>

<message code="xbrl.3.5.3.7.1:linkLocType"
         level="error"
         module="ValidateXbrlDTS.py" line="650"
         args="element">
Element {element} missing xlink:type="locator"
</message>

<message code="xbrl.3.5.3.7.2:instanceLocInDTS"
         level="error"
         module="ValidateXbrlDTS.py" line="188"
         args="locHref">
Loc's href {locHref} does not identify an element in an XBRL document discovered as part of the DTS
</message>

<message code="xbrl.3.5.3.8.1:resourceType"
         level="error"
         module="ValidateXbrlDTS.py" line="782"
         args="element">
Element {element} appears to be a resource missing xlink:type="resource"
</message>

<message code="xbrl.3.5.3.8.2:resourceLabel"
         level="error"
         module="ValidateXbrlDTS.py" line="793"
         args="element">
Element {element} missing xlink:label
</message>

<message code="xbrl.3.5.4:hrefIdNotFound"
         level="error"
         module="ValidateXbrlDTS.py" line="65"
         args="elementHref">
Href {elementHref} not located
</message>

<message code="xbrl.3.5.4:hrefScheme"
         level="error"
         module="ValidateXbrlDTS.py" line="83"
         args="elementHref scheme">
Href {elementHref} unsupported scheme: {scheme}
</message>

<message code="xbrl.4.11.1.1:instanceLoc"
         level="error"
         module="ValidateXbrlDTS.py" line="171"
         args="locHref">
Instance loc's href {locHref} not an element in same instance
</message>

<message code="xbrl.4.11.1.2.1:footnoteLang"
         level="error"
         module="ValidateXbrlDTS.py" line="661"
         args="xlinkLabel">
Footnote {xlinkLabel} element missing xml:lang attribute
</message>

<message code="xbrl.4.11.1.3.1:factFootnoteArcFrom"
         level="error"
         module="ValidateXbrl.py" line="143"
         args="linkrole xlinkLabelFrom xlinkLabelTo">
Footnote arc in extended link {linkrole} from {xlinkLabelFrom} to {xlinkLabelTo} "from" is not a loc
</message>

<message code="xbrl.4.11.1.3.1:factFootnoteArcTo"
         level="error"
         module="ValidateXbrl.py" line="148"
         args="linkrole xlinkLabelFrom xlinkLabelTo">
Footnote arc in extended link {linkrole} from {xlinkLabelFrom} to {xlinkLabelTo} "to" is not a footnote resource
</message>

<message code="xbrl.4.2.2:schemaRefHref"
         level="error"
         module="ValidateXbrlDTS.py" line="132"
         args="schemaRef">
SchemaRef {schemaRef} does not identify an xsd:schema element
</message>

<message code="xbrl.4.3.2:linkbaseRefHref"
         level="error"
         module="ValidateXbrlDTS.py" line="102"
         args="linkbaseHref">
LinkbaseRef {linkbaseHref} does not identify an link:linkbase element
</message>

<message code="xbrl.4.3.3:linkbaseRefArcrole"
         level="error"
         module="ValidateXbrlDTS.py" line="645"
         args="">
LinkbaseRef missing arcrole
</message>

<message code="xbrl.4.3.4:linkbaseRefLinks"
         level="error"
         module="ValidateXbrlDTS.py" line="123"
         args="linkbaseHref role link">
LinkbaseRef {linkbaseHref} role {role} has wrong extended link {link}
</message>

<message code="xbrl.4.6.1:itemContextRef"
         level="error"
         module="ValidateXbrl.py" line="541"
         args="fact">
Item {fact} must have a context
</message>

<message code="xbrl.4.6.1:tupleContextRef"
         level="error"
         module="ValidateXbrl.py" line="586"
         args="fact">
Tuple {fact} must not have a context
</message>

<message code="xbrl.4.6.2:numericUnit"
         level="error"
         module="ValidateXbrl.py" line="493"
         args="fact contextID">
Fact {fact} context {contextID} is numeric and must have a unit
</message>

<message code="xbrl.4.6.3:bothPrecisionAndDecimals"
         level="error"
         module="ValidateXbrl.py" line="531"
         args="fact contextID">
Fact {fact} context {contextID} can not have both precision and decimals
</message>

<message code="xbrl.4.6.3:fractionPrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="560"
         args="fact contextID">
Fact {fact} context {contextID} is a fraction concept and cannot have either precision or decimals
</message>

<message code="xbrl.4.6.3:missingPrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="581"
         args="fact contextID">
Fact {fact} context {contextID} is a numeric concept and must have either precision or decimals
</message>

<message code="xbrl.4.6.3:nilPrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="555"
         args="fact contextID">
Fact {fact} context {contextID} can not be nil and have either precision or decimals
</message>

<message code="xbrl.4.6.3:tuplePrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="590"
         args="fact">
Fact {fact} is a tuple and cannot have either precision or decimals
</message>

<message code="xbrl.4.6.4:precision"
         level="error"
         module="ValidateXbrl.py" line="521"
         args="fact contextID precision">
Fact {fact} context {contextID} precision {precision} is invalid
</message>

<message code="xbrl.4.6.4:precision"
         level="error"
         module="ValidateXbrl.py" line="527"
         args="fact contextID precision">
Fact {fact} context {contextID} precision {precision} is invalid
</message>

<message code="xbrl.4.6:notItemOrTuple"
         level="error"
         module="ValidateXbrl.py" line="600"
         args="fact">
Fact {fact} must be an item or tuple
</message>

<message code="xbrl.4.7.2:contextDateError"
         level="error"
         module="ValidateXbrl.py" line="322"
         args="contextID error">
Context %(contextID) startDate or endDate: {error}
</message>

<message code="xbrl.4.7.2:contextDateError"
         level="error"
         module="ValidateXbrl.py" line="329"
         args="contextID error">
Context {contextID} instant date: {error}
</message>

<message code="xbrl.4.7.2:contextPeriodType"
         level="error"
         module="ValidateXbrl.py" line="548"
         args="fact contextID periodType">
Fact {fact} context {contextID} has period type {periodType} conflict with context
</message>

<message code="xbrl.4.7.2:periodStartBeforeEnd"
         level="error"
         module="ValidateXbrl.py" line="318"
         args="contextID">
Context {contextID} must have startDate less than endDate
</message>

<message code="xbrl.4.7:instanceElementOrder"
         level="error"
         module="ValidateXbrlDTS.py" line="826"
         args="element">
Element {element} is out of order
</message>

<message code="xbrl.4.8.2:measureElement"
         level="error"
         module="ValidateXbrl.py" line="342"
         args="unitID measure">
Unit {unitID} illegal measure: {measure}
</message>

<message code="xbrl.4.8.2:monetaryFactUnit-notMonetaryMeasure"
         level="error"
         module="ValidateXbrl.py" line="505"
         args="fact contextID unitID">
Fact {fact} context {contextID} must have a monetary unit measure {unitID}
</message>

<message code="xbrl.4.8.2:monetaryFactUnit-notSingleMeasure"
         level="error"
         module="ValidateXbrl.py" line="500"
         args="fact contextID unitID">
Fact {fact} context {contextID} must have a single unit measure which is monetary {unitID}
</message>

<message code="xbrl.4.8.2:sharesFactUnit-notSharesMeasure"
         level="error"
         module="ValidateXbrl.py" line="515"
         args="fact contextID unitID">
Fact {fact} context {contextID} must have a xbrli:shares unit {unitID}
</message>

<message code="xbrl.4.8.2:sharesFactUnit-notSingleMeasure"
         level="error"
         module="ValidateXbrl.py" line="511"
         args="fact contextID unitID">
Fact {fact} context {contextID} must have a single xbrli:shares unit {unitID}
</message>

<message code="xbrl.4.8.4:measureBothNumDenom"
         level="error"
         module="ValidateXbrl.py" line="347"
         args="unitID measure">
Unit {unitID} numerator measure: {measure} also appears as denominator measure
</message>

<message code="xbrl.4.9:tupleAttribute"
         level="error"
         module="ValidateXbrl.py" line="395"
         args="concept attribute">
Tuple {concept} must not have attribute in this namespace {attribute}
</message>

<message code="xbrl.4.9:tupleBalance"
         level="error"
         module="ValidateXbrl.py" line="388"
         args="concept">
Tuple {concept} must not have balance
</message>

<message code="xbrl.4.9:tupleElementItemOrTuple"
         level="error"
         module="ValidateXbrl.py" line="417"
         args="concept tupleElement">
Tuple {concept} must not have element {tupleElement} not an item or tuple
</message>

<message code="xbrl.4.9:tupleElementUndefined"
         level="error"
         module="ValidateXbrl.py" line="411"
         args="concept tupleElement">
Tuple {concept} element {tupleElement} not defined
</message>

<message code="xbrl.4.9:tupleGloballyDeclared"
         level="error"
         module="ValidateXbrl.py" line="380"
         args="concept">
Tuple {concept} must be declared globally
</message>

<message code="xbrl.4.9:tupleMixedContent"
         level="error"
         module="ValidateXbrl.py" line="400"
         args="concept">
Tuple {concept} must not have mixed content
</message>

<message code="xbrl.4.9:tuplePeriodType"
         level="error"
         module="ValidateXbrl.py" line="384"
         args="concept">
Tuple {concept} must not have periodType
</message>

<message code="xbrl.4.9:tupleSimpleContent"
         level="error"
         module="ValidateXbrl.py" line="404"
         args="concept">
Tuple {concept} must not have simple content
</message>

<message code="xbrl.4:xbrlRootElement"
         level="error"
         module="ValidateXbrlDTS.py" line="835"
         args="parent">
Xbrl must be a root element, and may not be nested in {parent}
</message>

<message code="xbrl.5.1.1.1:itemPeriodType"
         level="error"
         module="ValidateXbrl.py" line="422"
         args="concept">
Item {concept} must have a valid periodType
</message>

<message code="xbrl.5.1.1.2:itemBalance"
         level="error"
         module="ValidateXbrl.py" line="427"
         args="concept balance">
Item {concept} must have a valid balance {balance}
</message>

<message code="xbrl.5.1.1.2:itemBalance"
         level="error"
         module="ValidateXbrl.py" line="432"
         args="concept">
Item {concept} may not have a balance
</message>

<message code="xbrl.5.1.1.3:itemType"
         level="error"
         module="ValidateXbrl.py" line="436"
         args="concept itemType">
Item {concept} type {itemType} invalid
</message>

<message code="xbrl.5.1.1:fractionPrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="565"
         args="fact contextID numerator">
Fact {fact} context {contextID} is a fraction with invalid numerator {numerator}
</message>

<message code="xbrl.5.1.1:fractionPrecisionDecimals"
         level="error"
         module="ValidateXbrl.py" line="569"
         args="">
Fact {fact} context {contextID} is a fraction with invalid denominator %(denominator)
</message>

<message code="xbrl.5.1.1:itemMixedContent"
         level="error"
         module="ValidateXbrl.py" line="576"
         args="fact contextID childElementName">
Fact {fact} context {contextID} may not have child elements {childElementName}
</message>

<message code="xbrl.5.1.3.4:custRoleUsedOn"
         level="error"
         module="ValidateXbrlDTS.py" line="721"
         args="xlinkRole element">
Role {xlinkRole} missing usedOn for {element}
</message>

<message code="xbrl.5.1.4.5:custArcroleUsedOn"
         level="error"
         module="ValidateXbrlDTS.py" line="765"
         args="element arcrole">
Arcrole {arcrole} missing usedOn for {element}
</message>

<message code="xbrl.5.1.4.5:custArcroleUsedOn"
         level="error"
         module="ValidateXbrlDTS.py" line="774"
         args="element arcrole">
XBRL file {0} standard arcrole {arcrole} used on wrong arc {element}
</message>

<message code="xbrl.5.1:emptyTargetNamespace"
         level="error"
         module="ValidateXbrlDTS.py" line="291"
         args="">
Schema element has an empty targetNamespace
</message>

<message code="xbrl.5.1:schemaRootElement"
         level="error"
         module="ValidateXbrlDTS.py" line="841"
         args="parent">
Schema must be a root element, and may not be nested in {parent}
</message>

<message code="xbrl.5.2.2.2.1:labelLang"
         level="error"
         module="ValidateXbrlDTS.py" line="665"
         args="xlinkLabel">
Label {xlinkLabel} element missing xml:lang attribute
</message>

<message code="xbrl.5.2.2.3:labelArcRemoteResource"
         level="error"
         module="ValidateXbrl.py" line="160"
         args="linkrole xlinkLabel xlinkHref">
Unprohibited labelArc in extended link {linkrole} has illegal remote resource loc labeled {xlinkLabel} href {xlinkHref}
</message>

<message code="xbrl.5.2.4.2.1:preferredLabelMissing"
         level="error"
         module="ValidateXbrl.py" line="265"
         args="source target linkrole preferredLabel">
Presentation relationship from {source} to {target} in link role {linkrole} missing preferredLabel {preferredLabel}
</message>

<message code="xbrl.5.2.5.2.1:zeroWeight"
         level="error"
         module="ValidateXbrl.py" line="236"
         args="source target linkrole">
Calculation relationship has zero weight from {source} to {target} in link role {linkrole}
</message>

<message code="xbrl.5.2.5.2:calcInconsistency"
         level="inconsistency"
         module="ValidateXbrlCalcs.py" line="131"
         args="concept linkrole reportedSum computedSum contextID unitID">
Calculation inconsistent from {concept} in link role {linkrole} reported sum {reportedSum} computed sum {computedSum} context {contextID} unit {unitID}
</message>

<message code="xbrl.5.2.5.2:inferringPrecision"
         level="info"
         module="ValidateXbrlCalcs.py" line="43"
         args="">
Validating calculations inferring precision.
</message>

<message code="xbrl.5.2.5.2:nonNumericCalc"
         level="error"
         module="ValidateXbrl.py" line="252"
         args="source target linkrole sourceNumericDecorator targetNumericDecorator">
Calculation relationship has illegal concept from {source}{sourceNumericDecorator} to {target}{targetNumericDecorator} in link role {linkrole}
</message>

<message code="xbrl.5.2.6.2.2:essenceAliasBalance"
         level="error"
         module="ValidateXbrl.py" line="285"
         args="">
Essence-alias relationship from {source} to {target} in link role {linkrole} has different balances
</message>

<message code="xbrl.5.2.6.2.2:essenceAliasTypes"
         level="error"
         module="ValidateXbrl.py" line="277"
         args="source target linkrole">
Essence-alias relationship from {source} to {target} in link role {linkrole} has different types or periodTypes
</message>

<message code="xbrl.5.2.6.2.2:essenceAliasUnitsInconsistency"
         level="inconsistency"
         module="ValidateXbrlCalcs.py" line="155"
         args="essenceConcept aliasConcept linkrole contextID">
Essence-Alias inconsistent units from {essenceConcept} to {aliasConcept} in link role {linkrole} context {contextID}
</message>

<message code="xbrl.5.2.6.2.2:essenceAliasUnitsInconsistency"
         level="inconsistency"
         module="ValidateXbrlCalcs.py" line="161"
         args="essenceConcept aliasConcept linkrole contextID">
Essence-Alias inconsistent value from {essenceConcept} to {aliasConcept} in link role {linkrole} context {contextID}
</message>

<message code="xbrl.5.2.6.2.4:requiresElementInconsistency"
         level="inconsistency"
         module="ValidateXbrlCalcs.py" line="172"
         args="requiringConcept requiredConcept linkrole">
Requires-Element {requiringConcept} missing required fact for {requiredConcept} in link role {linkrole}
</message>

<message code="xbrl.5.2:linkbaseRootElement"
         level="error"
         module="ValidateXbrlDTS.py" line="565"
         args="parent">
Linkbase must be a root element or child of appinfo, and may not be nested in {parent}
</message>

<message code="xbrl.5.6.1:Redefine"
         level="error"
         module="ValidateXbrlDTS.py" line="414"
         args="">
Redefine is not allowed
</message>

<message code="xbrl:hrefFileNotFound"
         level="error"
         module="ValidateXbrlDTS.py" line="52"
         args="elementHref">
Href {elementHref} file not found
</message>

<message code="xbrl:schemaDefinitionMissing"
         level="error"
         module="ModelDocument.py" line="794"
         args="element">
Linkbase extended link {element} missing schema definition
</message>

<message code="xbrl:schemaImportMissing"
         level="error"
         module="ModelDocument.py" line="934"
         args="element">
Instance fact {element} missing schema definition 
</message>

<message code="xbrl:schemaImportMissing"
         level="error"
         module="ValidateXbrl.py" line="606"
         args="fact">
Fact {fact} missing schema definition or missing name attribute
</message>

<message code="xbrlacfe:inconsistentAspectCoverFilters"
         level="error"
         module="ValidateFormula.py" line="804"
         args="xlinkLabel filterLabel aspect filterLabel2">
Variable set {xlinkLabel}, aspect cover filter {filterLabel}, aspect {aspect}, conflicts with {filterLabel2} with inconsistent cover attribute
</message>

<message code="xbrlcae:acceptanceRadiusConflict"
         level="error"
         module="ValidateFormula.py" line="592"
         args="xlinkLabel">
Consistency assertion {xlinkLabel} has both absolute and proportional acceptance radii
</message>

<message code="xbrlcae:variablesNotAllowed"
         level="error"
         module="ValidateFormula.py" line="598"
         args="xlinkLabel elementTo xlinkLabelTo">
Consistency assertion {xlinkLabel} has relationship to a {elementTo} {xlinkLabelTo}
</message>

<message code="xbrlcfie:inputMismatch"
         level="error"
         module="ValidateFormula.py" line="214"
         args="name parameterCountSignature parameterCountImplementation">
Custom function {name} signature has {parameterCountSignature} parameters but implementation has {parameterCountImplementation}, must be matching
</message>

<message code="xbrlcfie:missingCFIRelationship"
         level="error"
         module="ValidateFormula.py" line="221"
         args="xlinkLabel">
Custom function implementation {xlinkLabel} has no relationship from any custom function signature
</message>

<message code="xbrlcfie:tooManyCFIRelationships"
         level="error"
         module="ValidateFormula.py" line="102"
         args="xlinkLabel">
Function implementation {xlinkLabel} must be the target of only one function-implementation relationship
</message>

<message code="xbrlcfie:tooManyCFIRelationships"
         level="error"
         module="ValidateFormula.py" line="97"
         args="name">
Function-implementation relationship from signature {name} has more than one implementation target
</message>

<message code="xbrldie:DefaultValueUsedInInstanceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="285"
         args="contextID dimension value">
Context {contextID} explicit dimension {dimension} member {value} is a default member item
</message>

<message code="xbrldie:ExplicitMemberUndefinedQNameError"
         level="error"
         module="ValidateXbrlDimensions.py" line="280"
         args="contextID dimension value">
Context {contextID} explicit dimension {dimension} member {value} is not a global member item
</message>

<message code="xbrldie:IllegalTypedDimensionContentError"
         level="error"
         module="ValidateXbrlDimensions.py" line="304"
         args="contextID dimension error">
Context {contextID} typed dimension {dimension} has {error}
</message>

<message code="xbrldie:PrimaryItemDimensionallyInvalidError"
         level="error"
         module="ValidateXbrlDimensions.py" line="326"
         args="fact contextID">
Fact {fact} context {contextID} dimensionally not valid
</message>

<message code="xbrldie:RepeatedDimensionInInstanceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="313"
         args="contextID dimension">
Context {contextID} dimension {dimension} is a repeated dimension value
</message>

<message code="xbrldie:RepeatedDimensionInInstanceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="320"
         args="contextID dimension">
Context {contextID} dimension {dimension} is a repeated dimension value
</message>

<message code="xbrldte:DRSDirectedCycleError"
         level="error"
         module="ValidateXbrlDimensions.py" line="91"
         args="hypercube dimension linkrole path">
Dimension relationships have a directed cycle in DRS role {linkrole} 
starting from hypercube {hypercube}, 
dimension {dimension}, 
path {path}
</message>

<message code="xbrldte:DimensionDefaultSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="129"
         args="source target linkrole">
Dimension-default relationship from {source} to {target} in link role {linkrole} must have a dimension declaration source
</message>

<message code="xbrldte:DimensionDefaultSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="133"
         args="source target linkrole">
Dimension-default relationship from {source} to {target} in link role {linkrole} has a typed dimension source
</message>

<message code="xbrldte:DimensionDefaultTargetError"
         level="error"
         module="ValidateXbrlDimensions.py" line="137"
         args="source target linkrole">
Dimension-default relationship from {source} to {target} in link role {linkrole} must have a domain member target
</message>

<message code="xbrldte:DimensionDomainSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="111"
         args="source target linkrole">
Dimension-domain relationship from {source} to {target} in link role {linkrole} must have a dimension declaration source
</message>

<message code="xbrldte:DimensionDomainSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="115"
         args="source target linkrole">
Dimension-domain relationship from {source} to {target} in link role {linkrole} has a typed dimension source
</message>

<message code="xbrldte:DimensionDomainTargetError"
         level="error"
         module="ValidateXbrlDimensions.py" line="119"
         args="source target linkrole">
Dimension-domain relationship from {source} to {target} in link role {linkrole} must have a domain member target
</message>

<message code="xbrldte:DimensionElementIsNotAbstractError"
         level="error"
         module="ValidateXbrl.py" line="445"
         args="concept">
Dimension item {concept} must be abstract
</message>

<message code="xbrldte:DomainMemberSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="157"
         args="source target linkrole">
Domain-Member relationship from {source} to {target} in link role {linkrole} must have a domain primary item or domain member source
</message>

<message code="xbrldte:DomainMemberTargetError"
         level="error"
         module="ValidateXbrlDimensions.py" line="161"
         args="source target linkrole">
Domain-Member relationship from {source} to {target} in link role {linkrole} must have a domain primary item or domain member target
</message>

<message code="xbrldte:HasHypercubeMissingContextElementAttributeError"
         level="error"
         module="ValidateXbrlDimensions.py" line="61"
         args="arcroleType source target linkrole">
HasHypercube {arcroleType} relationship from {source} to {target} in link role {linkrole} must have a context element
</message>

<message code="xbrldte:HasHypercubeSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="50"
         args="arcroleType source target linkrole">
HasHypercube {arcroleType} relationship from {source} to {target} in link role {linkrole} must have a primary item source
</message>

<message code="xbrldte:HasHypercubeTargetError"
         level="error"
         module="ValidateXbrlDimensions.py" line="55"
         args="arcroleType source target linkrole">
HasHypercube {arcroleType} relationship from {source} to {target} in link role {linkrole} must have a hypercube declaration target
</message>

<message code="xbrldte:HypercubeDimensionSourceError"
         level="error"
         module="ValidateXbrlDimensions.py" line="35"
         args="source target linkrole">
Hypercube-dimension relationship from {source} to {target} in link role {linkrole} must have a hypercube declaration source
</message>

<message code="xbrldte:HypercubeDimensionTargetError"
         level="error"
         module="ValidateXbrlDimensions.py" line="39"
         args="source target linkrole">
Hypercube-dimension relationship from {source} to {target} in link role {linkrole} must have a dimension declaration target
</message>

<message code="xbrldte:HypercubeElementIsNotAbstractError"
         level="error"
         module="ValidateXbrl.py" line="441"
         args="concept">
Hypercube item {concept} must be abstract
</message>

<message code="xbrldte:OutOfDTSSchemaError"
         level="error"
         module="ValidateXbrlDimensions.py" line="242"
         args="concept">
Concept {concept} typedDomainRef is not resolved
</message>

<message code="xbrldte:PrimaryItemPolymorphismError"
         level="error"
         module="ValidateXbrlDimensions.py" line="101"
         args="hypercube dimension linkrole path">
Dimension relationships have a polymorphism cycle in DRS role {linkrole} 
starting from hypercube {hypercube}, 
dimension {dimension}, 
path {path}
</message>

<message code="xbrldte:TargetRoleNotResolvedError"
         level="error"
         module="ValidateXbrlDTS.py" line="807"
         args="element targetRole">
TargetRole {targetRole} is missing a roleRef
</message>

<message code="xbrldte:TooManyDefaultMembersError"
         level="error"
         module="ValidateXbrlDimensions.py" line="141"
         args="source target target2">
Dimension {source} has multiple defaults {target} and {target2}
</message>

<message code="xbrldte:TypedDimensionError"
         level="error"
         module="ValidateXbrlDimensions.py" line="248"
         args="concept">
Concept {concept} typedDomainRef must identify a non-abstract element
</message>

<message code="xbrldte:TypedDimensionURIError"
         level="error"
         module="ValidateXbrlDimensions.py" line="238"
         args="concept">
Concept {concept} typedDomainRef has no fragment identifier
</message>

<message code="xbrldte:TypedDomainRefError"
         level="error"
         module="ValidateXbrlDimensions.py" line="252"
         args="concept">
Concept {concept} is not a dimension item but has a typedDomainRef
</message>

<message code="xbrleae:variableReferenceNotAllowed"
         level="error"
         module="ValidateFormula.py" line="475"
         args="xlinkLabel name">
Existence Assertion {xlinkLabel}, cannot refer to variable {name}
</message>

<message code="xbrlfe:badSubsequentOCCValue"
         level="error"
         module="FormulaEvaluator.py" line="673"
         args="xlinkLabel occ">
Formula {xlinkLabel} OCC element {occ} covers a dimensional aspect
</message>

<message code="xbrlfe:bindEmptySourceVariable"
         level="error"
         module="ValidateFormula.py" line="941"
         args="xlinkLabel name">
Formula {xlinkLabel}: source {name} is a fact variable that has a fallback value
</message>

<message code="xbrlfe:conflictingAspectRules"
         level="error"
         module="ValidateFormula.py" line="885"
         args="xlinkLabel concept">
Formula {xlinkLabel} has a rule for the unit aspect of a non-numeric concept {concept}
</message>

<message code="xbrlfe:conflictingAspectRules"
         level="error"
         module="ValidateFormula.py" line="891"
         args="xlinkLabel concept aspectPeriodType conceptPeriodType">
Formula {xlinkLabel} has a rule for the {aspectPeriodType} period aspect of a {conceptPeriodType} concept {concept}
</message>

<message code="xbrlfe:defaultAspectValueConflicts"
         level="error"
         module="ValidateFormula.py" line="945"
         args="xlinkLabel name">
Formula {xlinkLabel}: formula source {name} is a fact variable that binds as a sequence
</message>

<message code="xbrlfe:illegalUseOfUncoveredQName"
         level="error"
         module="ValidateFormula.py" line="925"
         args="xlinkLabel name">
Formula {xlinkLabel}, not implicit filtering element has formulaUncovered source: {name}
</message>

<message code="xbrlfe:incompleteConceptRule"
         level="error"
         module="ValidateFormula.py" line="832"
         args="xlinkLabel">
Formula {xlinkLabel} concept rule does not have a nearest source and does not have a child element
</message>

<message code="xbrlfe:incompleteEntityIdentifierRule"
         level="error"
         module="ValidateFormula.py" line="843"
         args="xlinkLabel">
Formula {xlinkLabel} entity identifier rule does not have a nearest source and does not have either a @scheme or a @value attribute
</message>

<message code="xbrlfe:incompletePeriodRule"
         level="error"
         module="ValidateFormula.py" line="852"
         args="xlinkLabel">
Formula {xlinkLabel} period rule does not have a nearest source and does not have a child element
</message>

<message code="xbrlfe:missingConceptRule"
         level="error"
         module="FormulaEvaluator.py" line="561"
         args="xlinkLabel concept element">
Formula {xlinkLabel} concept {concept} is not a {element}
</message>

<message code="xbrlfe:missingConceptRule"
         level="error"
         module="ValidateFormula.py" line="836"
         args="xlinkLabel">
Formula {xlinkLabel} omits a rule for the concept aspect
</message>

<message code="xbrlfe:missingEntityIdentifierRule"
         level="error"
         module="ValidateFormula.py" line="847"
         args="xlinkLabel">
Formula {xlinkLabel} omits a rule for the entity identifier aspect
</message>

<message code="xbrlfe:missingPeriodRule"
         level="error"
         module="ValidateFormula.py" line="856"
         args="xlinkLabel">
Formula {xlinkLabel} omits a rule for the period aspect
</message>

<message code="xbrlfe:missingSAVForUnitRule"
         level="error"
         module="ValidateFormula.py" line="876"
         args="xlinkLabel">
Formula {xlinkLabel} unit rule does not have a source and does not have a child element
</message>

<message code="xbrlfe:missingUnitRule"
         level="error"
         module="ValidateFormula.py" line="880"
         args="xlinkLabel">
Formula {xlinkLabel} omits a rule for the unit aspect
</message>

<message code="xbrlfe:nonSingletonOutputValue"
         level="error"
         module="FormulaEvaluator.py" line="734"
         args="xlinkLabel valueSequenceLength">
Formula {xlinkLabel} value is a sequence of length {valueSequenceLength}
</message>

<message code="xbrlfe:nonexistentSourceVariable"
         level="error"
         module="ValidateFormula.py" line="929"
         args="xlinkLabel name">
Variable set {xlinkLabel}, source {name} is not in the variable set
</message>

<message code="xbrlfe:nonexistentSourceVariable"
         level="error"
         module="ValidateFormula.py" line="937"
         args="xlinkLabel name element">
Variable set {xlinkLabel}, source {name} not a factVariable but is a {element}
</message>

<message code="xbrlfe:unrecognisedAspectRule"
         level="error"
         module="ValidateFormula.py" line="914"
         args="xlinkLabel aspectModel undefinedAspects">
Formula {xlinkLabel} aspect model, {aspectModel}, includes an rule for aspect not defined in this aspect model: {undefinedAspects}
</message>

<message code="xbrlfe:wrongXpathResultForTypedDimensionRule"
         level="error"
         module="FormulaEvaluator.py" line="660"
         args="xlinkLabel dimension value">
Formula {xlinkLabel} dimension {dimension} value is not a node: {value}
</message>

<message code="xbrlgene:missingArcRoleUsedOnValue"
         level="error"
         module="ValidateXbrlDTS.py" line="769"
         args="element arcrole">
Generic arc arcrole {arcrole} missing usedOn for {element}
</message>

<message code="xbrlgene:missingResourceRoleUsedOnValue"
         level="error"
         module="ValidateXbrlDTS.py" line="729"
         args="xlinkRole element">
Generic resource role {xlinkRole} missing usedOn for {element}
</message>

<message code="xbrlgene:missingRoleRefForArcRole"
         level="error"
         module="ValidateXbrlDTS.py" line="759"
         args="element arcrole">
Generic arc arcrole {arcrole} is missing an arcroleRef
</message>

<message code="xbrlgene:missingRoleRefForLinkRole"
         level="error"
         module="ValidateXbrlDTS.py" line="711"
         args="xlinkRole">
Generic link role {xlinkRole} is missing a roleRef
</message>

<message code="xbrlgene:missingRoleRefForResourceRole"
         level="error"
         module="ValidateXbrlDTS.py" line="715"
         args="xlinkRole">
Generic resource role {xlinkRole} is missing a roleRef
</message>

<message code="xbrlgene:nonAbsoluteArcRoleURI"
         level="error"
         module="ValidateXbrlDTS.py" line="749"
         args="element arcrole">
Generic arc arcrole {arcrole} is not absolute
</message>

<message code="xbrlgene:nonAbsoluteLinkRoleURI"
         level="error"
         module="ValidateXbrlDTS.py" line="697"
         args="xlinkRole">
Generic link role {xlinkRole} is not absolute
</message>

<message code="xbrlgene:nonAbsoluteResourceRoleURI"
         level="error"
         module="ValidateXbrlDTS.py" line="701"
         args="xlinkRole">
Generic resource role {xlinkRole} is not absolute
</message>

<message code="xbrlle.2.1.1:genericLabelTarget"
         level="error"
         module="ValidateXbrl.py" line="170"
         args="linkrole xlinkLabel">
Generic label arc in extended link {linkrole} to {xlinkLabel} must target a generic label
</message>

<message code="xbrlre.2.1.1:genericReferenceTarget"
         level="error"
         module="ValidateXbrl.py" line="177"
         args="linkrole xlinkLabel">
Generic reference arc in extended link {linkrole} to {xlinkLabel} must target a generic reference
</message>

<message code="xbrlte:aspectValueNotDefinedByOrdinate"
         level="error"
         module="RenderingEvaluator.py" line="107"
         args="xlinkLabel axis">
{axis} ordinate {xlinkLabel} does not define an aspect
</message>

<message code="xbrlte:axisAspectClash"
         level="error"
         module="RenderingEvaluator.py" line="89"
         args="axis xlinkLabel axisDisposition axisDisposition2 aspect">
{axis} ordinate {xlinkLabel}, aspect {aspect} defined on axes of disposition {axisDisposition} and {axisDisposition2}
</message>

<message code="xbrlte:axisAspectClash"
         level="error"
         module="ViewUtilRenderedGrid.py" line="324"
         args="aspect">
Aspect {aspect} covered by multiple axes.
</message>

<message code="xbrlte:axisAspectModelMismatch"
         level="error"
         module="RenderingEvaluator.py" line="82"
         args="axis xlinkLabel aspectModel aspect">
{axis} ordinate {xlinkLabel}, aspect model {aspectModel}, aspect {aspect} not allowed
</message>

<message code="xbrlte:axisAspectModelMismatch"
         level="error"
         module="RenderingEvaluator.py" line="99"
         args="xlinkLabel">
DimensionRelationship axis {xlinkLabel} can't be used in non-dimensional aspect model
</message>

<message code="xbrlte:axisAspectModelMismatch"
         level="error"
         module="ValidateFormula.py" line="986"
         args="xlinkLabel aspectModel undefinedAspects">
RuleAxis {xlinkLabel} aspect model, {aspectModel}, includes an rule for aspect not defined in this aspect model: {undefinedAspects}
</message>

<message code="xbrlte:axisFilterCoversNoAspects"
         level="error"
         module="ValidateFormula.py" line="961"
         args="xlinkLabel">
FilterAxis {xlinkLabel} does not cover any aspects.
</message>

<message code="xbrlte:unknownAspectModel"
         level="error"
         module="RenderingEvaluator.py" line="61"
         args="xlinkLabel aspectModel">
Table {xlinkLabel}, aspect model {aspectModel} not recognized
</message>

<message code="xbrlte:unknownAspectModel"
         level="error"
         module="ValidateFormula.py" line="526"
         args="xlinkLabel aspectModel">
Table {xlinkLabel}, aspect model {aspectModel} not recognized
</message>

<message code="xbrlvarinste:inputInstanceDuplication"
         level="error"
         module="ValidateFormula.py" line="265"
         args="instName uri">
Input instance resource {instName} has multiple XBRL instances {uri}
</message>

<message code="xbrlvarinste:instanceVariableRecursionCycle"
         level="error"
         module="ValidateFormula.py" line="561"
         args="name dependencies">
Cyclic dependencies of instance {name} produced by a formula, with variables consuming instances {dependencies}
</message>

<message code="xbrlvarinste:instanceVariableRecursionCycle"
         level="error"
         module="ValidateFormula.py" line="575"
         args="name">
Cyclic dependencies of instance {name} produced by its own variables
</message>

<message code="xbrlvarinste:standardInputInstanceNotUnique"
         level="error"
         module="ValidateFormula.py" line="271"
         args="">
Standard input instance resource parameter has multiple XBRL instances
</message>

<message code="xbrlvarscopee:conflictingAspectModels"
         level="error"
         module="ValidateFormula.py" line="630"
         args="xlinkLabel1 aspectModel1 xlinkLabel2 aspectModel2">
Variable set {xlinkLabel1} aspectModel ({aspectModel1}) differs from varaible set {xlinkLabel2} aspectModel ({aspectModel2})
</message>

<message code="xbrlvarscopee:differentInstances"
         level="error"
         module="ValidateFormula.py" line="624"
         args="xlinkLabel1 instance1 xlinkLabel2 instance2">
Variable set {xlinkLabel1} in instance {instance1} has variables scope relationship to varaible set {xlinkLabel2} in instance {instance2}
</message>

<message code="xbrlve:cyclicDependencies"
         level="error"
         module="ValidateFormula.py" line="432"
         args="xlinkLabel nameFrom nameTo">
Cyclic dependencies in variable set {xlinkLabel}, from variable {nameFrom} to {nameTo}
</message>

<message code="xbrlve:duplicateVariableNames"
         level="error"
         module="ValidateFormula.py" line="354"
         args="xlinkLabel name">
Multiple variables named {xlinkLabel} in variable set {name}
</message>

<message code="xbrlve:factVariableReferenceNotAllowed"
         level="error"
         module="ValidateFormula.py" line="507"
         args="xlinkLabel filterLabel name">
Variable set {xlinkLabel}, filter {filterLabel}, cannot refer to variable {name}
</message>

<message code="xbrlve:fallbackValueVariableReferenceNotAllowed"
         level="error"
         module="ValidateFormula.py" line="395"
         args="xlinkLabel fallbackValue dependency">
Variable set {xlinkLabel} fallbackValue '{fallbackValue}' cannot refer to variable {dependency}
</message>

<message code="xbrlve:filterAspectModelMismatch"
         level="error"
         module="ValidateFormula.py" line="818"
         args="xlinkLabel aspectModel filterName filterLabel">
Variable set {xlinkLabel}, aspect model {aspectModel} filter {filterName} {filterLabel} can cover aspect not in aspect model
</message>

<message code="xbrlve:multipleTypedDimensionEqualityDefinitions"
         level="error"
         module="ValidateFormula.py" line="284"
         args="typedDomain equalityDefinition1 equalityDefinition2">
Multiple typed domain definitions from {typedDomain} to {equalityDefinition1} and {equalityDefinition2}
</message>

<message code="xbrlve:noCustomFunctionSignature"
         level="error"
         module="XPathParser.py" line="240"
         args="resource custFunction">
No custom function signature for {custFunction} in {resource}
</message>

<message code="xbrlve:noProhibitedNamespaceForCustomFunction"
         level="error"
         module="ValidateFormula.py" line="206"
         args="name namespace">
Custom function {name} has namespace reserved for functions in the function registry {namespace}
</message>

<message code="xbrlve:parameterCyclicDependencies"
         level="error"
         module="ValidateFormula.py" line="197"
         args="name dependencies">
Cyclic dependencies in parameter {name}, to names {dependencies}
</message>

<message code="xbrlve:parameterNameClash"
         level="error"
         module="ModelFormulaObject.py" line="606"
         args="name">
Parameter name used on multiple parameters {name}
</message>

<message code="xbrlve:unknownAspectModel"
         level="error"
         module="ValidateFormula.py" line="335"
         args="xlinkLabel aspectModel">
Variable set {xlinkLabel}, aspect model {aspectModel} not recognized
</message>

<message code="xbrlve:unresolvedDependency"
         level="error"
         module="ValidateFormula.py" line="192"
         args="name dependencies">
Undefined dependencies in parameter {name}, to names {dependencies}
</message>

<message code="xbrlve:unresolvedDependency"
         level="error"
         module="ValidateFormula.py" line="427"
         args="xlinkLabel nameFrom nameTo">
Undefined variable dependencies in variable set {xlinkLabel}, from variable {nameFrom} to {nameTo}
</message>

<message code="xbrlve:unresolvedDependency"
         level="error"
         module="ValidateFormula.py" line="440"
         args="xlinkLabel name">
Undefined variable dependency in variable set {xlinkLabel}, {name}
</message>

<message code="xbrlve:variableNameResolutionFailure"
         level="error"
         module="ValidateFormula.py" line="371"
         args="xlinkLabel name">
Variables name {name} cannot be determined on arc from {xlinkLabel}
</message>

<message code="xffe:invalidFunctionUse"
         level="error"
         module="XPathParser.py" line="121"
         args="name name2">
Function {name} cannot be used on an XPath expression associated with a {name2}
</message>

<message code="xfie:invalidExplicitDimensionQName"
         level="error"
         module="ModelFormulaObject.py" line="1960"
         args="dimension">
{dimension} is not an explicit dimension concept QName.
</message>

<message code="xfie:invalidExplicitDimensionQName"
         level="error"
         module="ModelFormulaObject.py" line="2002"
         args="dimension">
{dimension} is not an explicit dimension concept QName.
</message>

<message code="xhmlDTD:elementUnexpected"
         level="error"
         module="XmlValidate.py" line="66"
         args="element error">
{element} error {error}
</message>

<message code="xlink:actuate"
         level="error"
         module="ValidateXbrl.py" line="121"
         args="linkrole xlinkActuate">
Actuate {xlinkActuate} invalid in extended link {linkrole}
</message>

<message code="xlink:dupArcs"
         level="error"
         module="ValidateXbrl.py" line="98"
         args="linkrole xlinkLabelFrom xlinkLabelTo">
Duplicate xlink arcs  in extended link {linkrole} from {xlinkLabelFrom} to {xlinkLabelTo}
</message>

<message code="xlink:locatorHref"
         level="error"
         module="ValidateXbrl.py" line="84"
         args="linkrole xlinkLabel">
Xlink locator {xlinkLabel} missing href in extended link {linkrole}
</message>

<message code="xlink:show"
         level="error"
         module="ValidateXbrl.py" line="127"
         args="linkrole xlinkShow">
Show {xlinkShow} invalid in extended link {linkrole}
</message>

<message code="xlink:type"
         level="error"
         module="ValidateXbrl.py" line="115"
         args="linkrole xlinkType">
Xlink type {xlinkType} invalid in extended link {linkrole}
</message>

<message code="xmlDTD:error"
         level="error"
         module="XmlValidate.py" line="71"
         args="element error">
{element} error {error}
</message>

<message code="xmlSchema1.4.2.3:refSchemaNamespace"
         level="error"
         module="ModelDocument.py" line="561"
         args="fileName namespace targetNamespace">
Discovery of {fileName} expected namespace {namespace} found targetNamespace {targetNamespace}
</message>

<message code="xmlSchema:attributesRequired"
         level="error"
         module="XmlValidate.py" line="181"
         args="element typeName attributes">
Element {element} type {typeName} missing required attributes: {attributes}
</message>

<message code="xmlSchema:nilElementHasContent"
         level="error"
         module="XmlValidate.py" line="199"
         args="element">
Element {element} is nil but has contents
</message>

<message code="xmlSchema:requiredAttribute"
         level="error"
         module="ModelDocument.py" line="718"
         args="linkbaseRefElement">
Linkbase reference for {linkbaseRefElement} href attribute missing or malformed
</message>

<message code="xmlSchema:requiredAttribute"
         level="error"
         module="ModelDocument.py" line="751"
         args="modelObejct">
Locator href attribute missing or malformed in standard extended link
</message>

<message code="xmlSchema:syntax"
         level="error"
         module="ModelDocument.py" line="104"
         args="fileName error line column sourceAction">
{error}, {fileName}, line {line}, column {column}, {sourceAction} source element
</message>

<message code="xmlSchema:syntax"
         level="error"
         module="ModelDocument.py" line="133"
         args="fileName error sourceAction">
Unrecoverable error: {error}, {fileName}, {sourceAction} source element
</message>

<message code="xmlSchema:uniqueParticleAttribution"
         level="error"
         module="XmlValidateParticles.py" line="123"
         args="compositor element">
Particles of {compositor} have non-unique attribution of element {element}
</message>

<message code="xmlSchema:uniqueParticleAttribution"
         level="error"
         module="XmlValidateParticles.py" line="136"
         args="compositor element">
Particle of {compositor} has non-unique xs:any preceding element {element}
</message>

<message code="xmlSchema:uniqueParticleAttribution"
         level="error"
         module="XmlValidateParticles.py" line="142"
         args="compositor">
Particles of {compositor} have non-unique xs:any particle
</message>

<message code="xmlSchema:valueError"
         level="error"
         module="XmlValidate.py" line="352"
         args="element attribute typeName value error">
Element {element} attribute {attribute} type {typeName} value error: {value}, {error}
</message>

<message code="xmlSchema:valueError"
         level="error"
         module="XmlValidate.py" line="361"
         args="element typeName value error">
Element {element} type {typeName} value error: {value}, {error}
</message>

<message code="xmlValidation:valueError"
         level="error"
         module="XmlValidate.py" line="95"
         args="element error value">
Element {element} error {error} value: {value}
</message>

<message code="xmlschema.3.4.2:contentModel"
         level="error"
         module="ValidateXbrlDTS.py" line="470"
         args="element">
Element {element} is mis-located in schema file
</message>

<message code="xmlschema2.3.2.10:idDuplicated"
         level="error"
         module="ValidateXbrlDTS.py" line="277"
         args="element attribute value">
Element {element} id {value} is duplicated
</message>

<message code="xmlschema:refNotFound"
         level="error"
         module="ValidateXbrlDTS.py" line="423"
         args="element ref">
{element} ref {ref} not found
</message>
-->

</messages>