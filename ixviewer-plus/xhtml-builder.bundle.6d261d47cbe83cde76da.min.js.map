{"version":3,"file":"xhtml-builder.bundle.6d261d47cbe83cde76da.min.js","mappings":"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","sources":["webpack://ixviewer-2/webpack/runtime/chunk loaded","webpack://ixviewer-2/webpack/runtime/startup chunk dependencies","webpack://ixviewer-2/./src/ts/constants/constants.ts","webpack://ixviewer-2/./src/ts/workers/xhtml-worker.ts","webpack://ixviewer-2/./src/ts/fetch-merge/merge-data-utils.ts","webpack://ixviewer-2/webpack/bootstrap","webpack://ixviewer-2/webpack/runtime/define property getters","webpack://ixviewer-2/webpack/runtime/ensure chunk","webpack://ixviewer-2/webpack/runtime/get javascript chunk filename","webpack://ixviewer-2/webpack/runtime/get mini-css chunk filename","webpack://ixviewer-2/webpack/runtime/hasOwnProperty shorthand","webpack://ixviewer-2/webpack/runtime/make namespace object","webpack://ixviewer-2/webpack/runtime/publicPath","webpack://ixviewer-2/webpack/runtime/importScripts chunk loading","webpack://ixviewer-2/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(788).then(next);\n};","/* Created by staff of the U.S. Securities and Exchange Commission.\n * Data and content created by government employees within the scope of their employment\n * are not subject to domestic copyright protection. 17 U.S.C. 105.\n */\n\nimport { Reference } from \"../interface/fact\";\nimport { FormInformation } from \"../interface/form-information\";\nimport { InlineFileMeta, InstanceFile } from \"../interface/instance-file\";\nimport { Section } from \"../interface/meta\";\n\n\n//Not really used (see comment below)\ntype MetaDocument = any;\n\n\n\nexport const Constants =\n{\n\tversion: \"24.2.u1\",\n\tfeatureSet: \"plus\",\n\n\tscrollPosition: typeof window !== 'undefined' && window.localStorage.getItem(\"scrollPosition\") || \"start\",\n\n\thoverOption: typeof window !== 'undefined' && window.localStorage.getItem(\"hoverOption\") === \"true\" || false,\n\n\tgetHTMLAttributes: {} as Record<any, unknown>,\n\n\tgetPaginationPerPage: 10,\n\n\tgetHtmlOverallFactsCount: null as string | null,\n\n\tgetMetaSourceDocuments: [] as string[],\n\n\tgetMetaTags: [] as unknown[],\n\n\tgetInstanceFiles: [] as InstanceFile[],\n\n\tgetInlineFiles: [] as InlineFileMeta[],\n\n\tsections: [] as Section[],\n\n\tsetSections: (sections: Array<Section>): void => {\n\t\tif (sections) {\n\t\t\tConstants.sections = sections;\n\t\t\tsessionStorage.setItem('sections', JSON.stringify(sections));\n\t\t}\n\t},\n\n\tgetSectionsFromSessionStorage: (): Section[] => {\n\t\tconst sectionsFromLocal = sessionStorage.getItem('sections');\n\t\treturn JSON.parse(sectionsFromLocal || '[]') as Section[];\n\t},\n\n\tgetStdRef: {} as Record<string, Reference>,\n\n\tgetFormInformation: {} as FormInformation,\n\n\tgetMetaCustomPrefix: null as string | null,\n\n\t//These are never accessed outside of old unit tests\n\tgetMetaDts: null as MetaDocument | null,\n\tgetMetaDocuments: (input: string): MetaDocument | null => {\n\t\tif (input && typeof input === \"string\") {\n\t\t\treturn Constants.getMetaDts && Constants.getMetaDts[input]\n\t\t\t\t? Constants.getMetaDts[input]\n\t\t\t\t: null;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\tgetScrollPosition: (): number => {\n\t\tconst currentScrollPosition = document.getElementById('dynamic-xbrl-form')!.scrollTop as number;\n\t\treturn currentScrollPosition;\n\t},\n\n\tgetNavBarsHeight: (): number => {\n\t\treturn document.querySelector<HTMLElement>('div[id=\"topNavs\"]')?.offsetHeight || 0;\n\t}\n};\n","import * as c from \"cheerio\";\nimport { Cheerio, CheerioAPI, load } from \"cheerio\";\nimport { ILogObj, Logger } from \"tslog\";\nimport { setScaleInfo } from \"../fetch-merge/merge-data-utils\";\nimport { XhtmlFileMeta } from \"../interface/instance-file\";\nimport { SingleFact } from \"../interface/fact\";\nimport { UrlParams } from \"../interface/url-params\";\n\n\n/* eslint-disable @typescript-eslint/ban-types */\n\nexport type XhtmlPrepData =\n{\n    //important data\n    facts: Map<string, SingleFact>;\n    current: XhtmlFileMeta;\n\n    //other data that helper functions require\n    absolute: string;\n    params: UrlParams;\n    isWorkstation: boolean;\n    customPrefix: string | null;\n}\n\nexport type XhtmlPrepResponse =\n{\n    facts: Map<string, SingleFact>;\n    xhtml: string;\n}\n\n\n\nself.onmessage = ({ data }: { data: XhtmlPrepData }) =>\n{\n    const { current, facts } = data;\n    const xhtml = new XhtmlPrepper(data).doWork(current);\n\n    const x: XhtmlPrepResponse = { xhtml, facts };\n    self.postMessage(x);\n};\n\n\n/** prepares the XHTML doc for presentation */\nclass XhtmlPrepper\n{\n    //important data\n    private facts!: Map<string, SingleFact>;\n    // private current!: XhtmlFileMeta;  //TODO: might want to refactor these functions to use this reference\n\n    //other data that helper functions require\n    private readonly absolute!: string;\n    private readonly params!: UrlParams;\n    private readonly isWorkstation!: boolean;\n    private readonly customPrefix!: string;\n    \n    constructor(loadData: XhtmlPrepData)\n    {\n        Object.assign(this, loadData);\n    }\n\n\n    public doWork(current: XhtmlFileMeta)\n    {\n        let $ = load(current.xhtml, {});\n        $ = this.hiddenFacts($);\n        $ = this.fixImages($, this.isWorkstation);\n        $ = this.fixLinks($);\n        $ = this.redLineFacts($);\n        $ = this.excludeFacts($);\n        $ = this.attributeFacts($, this.facts, current.slug);\n        // current.xhtml = $.html();\n\n        return $.html();\n    }\n\n\n\n    private fixImages($: CheerioAPI, isWorkstation: boolean)\n    {\n        const startPerformance = performance.now();\n        const foundImagesArray = Array.from($('img'));\n        if (isWorkstation) {\n            // uncomment next 3 lines and force isWorkstation to true to test on local\n            // const exampleMlPath = '../DisplayDocument.do?step=docOnly&accessionNumber=0001314610-24-800735&interpretedFormat=false&redline=true&filename=MetaLinks.json'\n            \n            const [docName, searchParams] = this.params.doc.split('?');\n            let imgParams = new URLSearchParams(searchParams);\n\n            imgParams.set(\"step\", \"docOnly\");\n            imgParams.set(\"interpretedFormat\", \"false\");\n            imgParams.delete(\"redline\");\n            imgParams.delete(\"status\");\n            imgParams.delete(\"sequenceNumber\");\n\n            foundImagesArray.forEach((imgElem) => {\n                // Not sure how to handle Herm's suggestion: 'And if src is a local file (foo.jpg, not /include or http://archives.sec.xxx)'\n                // const imgIsLocal = !$(imgElem).attr('src')?.startsWith('/include');\n                // const imgIsFileNameOnly = $(imgElem).attr('src') && (!$(imgElem).attr('src')?.startsWith('/') || !$(imgElem).attr('src')?.includes('/', 1));\n                        \n                const imgSrc = $(imgElem).attr('src');\n                if(!imgSrc) return;\n\n                const imgFileName = imgSrc.includes('/') ? imgSrc.substring(imgSrc.lastIndexOf('/') + 1) : imgSrc;\n                imgParams.set(\"filename\", imgFileName);\n\n                console.log('params', imgParams.toString());\n\n                $(imgElem).attr('src', `${docName}?${imgParams.toString()}`);\n                $(imgElem).attr('loading', 'lazy');\n            });\n        }\n        else \n        {\n            foundImagesArray.forEach((imgElem) => {\n                const imgSrc = $(imgElem).attr('src');\n                if (!imgSrc?.startsWith('data:')) {\n                    const imageSlug = imgSrc?.substring(imgSrc.lastIndexOf('/') + 1);\n                    $(imgElem).attr('src', `${this.absolute}${imageSlug}`);\n                    $(imgElem).attr('loading', 'lazy');\n                }\n            })\n        }\n\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundImagesArray.length;\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.fixImages() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n        return $;\n    }\n\n    private fixLinks($: CheerioAPI)\n    {\n        const startPerformance = performance.now();\n        const foundLinksArray = Array.from($('[data-link],[href]'));\n        foundLinksArray.forEach((current) => {\n            if (Object.prototype.hasOwnProperty.call(current.attribs, 'href')) {\n                if (current.attribs.href.startsWith('http://') ||\n                    current.attribs.href.startsWith('https://') ||\n                    current.attribs.href.startsWith('#'))\n                {\n                    // already an absolute url, just add tabindex=18\n                    $(current).attr('tabindex', '18');\n\n                    // this anchor tag does not exsist in the current XHTML file\n                    if (current.attribs.href.startsWith('#')  &&\n                        current.attribs.href.slice(1) &&\n                        $(`[id='${current.attribs.href.slice(1)}']`).length === 0)\n                    {\n                        $(current).attr('xhtml-change', 'true');\n                    }\n                } else {\n                    // create an absolute url, add tabindex=18\n                    $(current).attr('tabindex', '18');\n                    $(current).attr('href', `${this.absolute}${current.attribs.href}`);\n                }\n            }\n            if (Object.prototype.hasOwnProperty.call(current.attribs, 'data-link')) {\n                $(current).attr('tabindex', '18');\n            }\n        });\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundLinksArray.length;\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.fixLinks() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n\n        return $;\n    }\n\n    private hiddenFacts($: CheerioAPI)\n    {\n        const startPerformance = performance.now();\n        const foundElements = Array.from($('[style*=\"-ix-hidden\"]')).slice(0, 1000);\n\n        foundElements.forEach((current) => {\n            const updatedStyle = Object.values($(current).css([\"-sec-ix-hidden\", \"-esef-ix-hidden\"]) || {}).filter(Boolean)[0];\n            const hiddenElement = $(`#${updatedStyle}`);\n            if ($(hiddenElement).length) {\n                // console.log($(hiddenElement));\n                // we now create an entirely new element based on the innerHTML\n                // of current, and the attributes of hiddenElement\n                const cheerioElement = $(`<${$(hiddenElement).prop('tagName')?.toLowerCase().replace(`:`, `\\\\:`)}>`);\n                //const id = $(hiddenElement).attr('id');\n\n                for (const key in $(hiddenElement).attr()) {\n                    $(cheerioElement).attr(key, $(hiddenElement).attr(key));\n                }\n                $(cheerioElement).attr('isadditionalitemsonly', 'true');\n                $(cheerioElement).attr('ishiddenelement', 'true');\n                $(cheerioElement).html($(current).text());\n                $(hiddenElement).removeAttr('id');\n                $(hiddenElement).removeAttr('contextref');\n                $(hiddenElement).removeAttr('name');\n\n                $(current).html($(cheerioElement));\n                if ($(cheerioElement).attr('id') === 'id3VybDovL2RvY3MudjEvZG9jOjU1M2Q3M2I4N2RhYjQ2MzQ5ZjlmNTI3Y2YwNzZjMzlhL3NlYzo1NTNkNzNiODdkYWI0NjM0OWY5ZjUyN2NmMDc2YzM5YV82MS9mcmFnOmI0ZGUyZDM0ZWE4NTRjMTc4NmFjYWIyYzRjZWRiMmQ2L3RleHRyZWdpb246YjRkZTJkMzRlYTg1NGMxNzg2YWNhYjJjNGNlZGIyZDZfNDAwNTE_70ac34fc-cc35-4fb1-ad12-4d0f52202d63') {\n                    const log: Logger<ILogObj> = new Logger();\n                    log.debug($(current).html());\n                }\n            } else {\n                const log: Logger<ILogObj> = new Logger();\n                log.debug('empty!');\n            }\n        });\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundElements.length\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.hiddenFacts() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n        return $;\n    }\n\n    /**\n     * Description\n     * @param {any} $: CheerioAPI\n     * @returns {any}\n     */\n    private redLineFacts($: CheerioAPI) {\n        const startPerformance = performance.now();\n        let foundElements = [];\n        \n        ['redline', 'redact'].forEach((r) => {\n            foundElements = Array.from($('[style*=\"-ix-' + r + '\"]'));\n            \n            if (Object.prototype.hasOwnProperty.call(this.params, 'redline') && this.params.redline) {\n                if (!PRODUCTION) {\n                    const log: Logger<ILogObj> = new Logger();\n                    log.debug(`ix-${r} styles Found: ${foundElements.length}`);\n                }\n                foundElements.forEach((current) => {\n                    const updatedStyle = Object.values($(current).css([\"-sec-ix-\" + r, \"-esef-ix-\" + r]) as {}).filter(Boolean)[0];\n                    if (updatedStyle === \"true\") {\n                        $(current).attr(r, 'true');\n                    }\n                });\n            }\n        });\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundElements?.length;\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.redLineFacts() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n        return $;\n    }\n\n    private excludeFacts($: CheerioAPI)\n    {\n        const startPerformance = performance.now();\n        const foundElements = Array.from($('[style*=\":exclude\"]'));\n        foundElements.forEach((current) => {\n            $(current).addClass('no-hover');\n        });\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundElements.length;\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.excludeFacts() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n        return $;\n    }\n\n    private attributeFacts($: CheerioAPI, map: Map<string, SingleFact>, currentSlug: string)\n    {\n        const startPerformance = performance.now();\n\n        const foundElements = Array.from($(`[contextRef]`));\n\n        foundElements.forEach((current) => {\n            $(current).attr(\"selected-fact\", 'false');\n            $(current).attr(\"hover-fact\", 'false');\n            $(current).attr(\"continued-fact\", 'false');\n            $(current).closest('table').length ? $(current).attr(\"inside-table\", 'true') : $(current).attr(\"inside-table\", 'false');\n\n            if (!$(current).prop('tagName').toLowerCase().endsWith(\"continuation\") && $(current).attr(\"continuedat\")) {\n                $(current).attr(\"continued-main-fact\", 'true');\n            }\n\n\n            if ($(current).attr('contextref') && $(current).attr('id')) {\n                $(current).attr('ix', $(current).attr('id'));\n                $(current).attr('id', this.updateMap($(current).attr('ix') as string, $(current), currentSlug));\n            }\n\n            if ($(current).attr('contextref') && !$(current).attr('id')) {\n                // for the facts in the html that have no ids...\n                const getByNameAndContextRef = (searchContextref: string | undefined, searchName: string | undefined) => {\n                    for (const [key, value] of map.entries()) {\n                        if (value.contextRef === searchContextref && value.name === searchName) {\n                            return key;\n                        }\n                    }\n                };\n\n                const mapKey = getByNameAndContextRef($(current).attr('contextref'), $(current).attr('name'));\n                if (mapKey) {\n                    $(current).attr('ix', mapKey);\n                    $(current).attr('id', mapKey);\n                    this.updateMap($(current)?.attr('ix') as string, $(current), currentSlug);\n                } else {\n                    const log: Logger<ILogObj> = new Logger();\n                    log.error(`Fact [name] && [contextRef] could not be located in the Map Object.`);\n                }\n            }\n            $(current).wrap(`<span></span>`);\n        });\n\n        const endPerformance = performance.now();\n        if (LOGPERFORMANCE) {\n            const items = foundElements.length;\n            const log: Logger<ILogObj> = new Logger();\n            log.debug(`FetchAndMerge.attributeFacts() completed in: ${(endPerformance - startPerformance).toFixed(2)}ms - ${items} items`);\n        }\n\n        return $;\n    }\n\n    private updateMap(id: string, element: Cheerio<c.Element>, currentSlug: string): string\n    {\n        const fact = this.facts.get(id);\n        if(!fact)\n        {\n            console.error(\"Cannot update map -- missing key:\", id);\n            return \"\";\n        }\n\n        this.facts.set(\n            id,\n            {\n                ...fact,\n                raw: element.text(),\n                format: element.attr('format') ? element.attr('format') : null,\n                isAdditional: element.parents().prop('tagName').toLowerCase().endsWith(':hidden'),\n                isCustom: element.attr('name')?.split(':')[0].toLowerCase() === this.customPrefix,\n                isAmountsOnly: element.prop('tagName')?.split(':')[1].toLowerCase() === 'nonfraction',\n                isTextOnly: element.prop('tagName')?.split(':')[1].toLowerCase() === 'nonnumeric',\n                isNegativeOnly: element.attr('sign') === '-',\n                file: currentSlug,\n                scale: setScaleInfo(element.attr('scale')) || \"\",\n                continuedIDs: [],\n            });\n\n        return fact.id;\n    }\n}\n","import { Report, Section, SectionFact } from '../interface/meta';\nimport { convertToSelector } from \"../helpers/utils\";\nimport { FilingSummary } from '../interface/filing-summary';\n\n/**\n * Description\n * @param {any} filingSummary:any\n * @param {any} metaLinksReports:any\n * @returns {any} => Flatter array of metalinks reports (section items).\n */\nexport const buildSectionsArrayFlatter = (filingSummary: FilingSummary, metaLinksReports: Report[], metaVersion: string) => {\n    // 'sections' and 'reports' are synonymous here\n    const filingSummaryReports = filingSummary.MyReports.Report;\n    let filingSummaryInputFiles = filingSummary.InputFiles.File;\n    if (!Array.isArray(filingSummaryInputFiles)) filingSummaryInputFiles = [filingSummaryInputFiles];\n    \n    const reportsContainStatements: boolean = filingSummaryReports\n        .filter(r => r.MenuCategory)\n        .map(r => r.MenuCategory && r.MenuCategory._text.toLowerCase())\n        .some((menuCategory: string) => {\n            return menuCategory == 'statement' || 'statements';\n        })\n\n    const addInstanceProps = (section: Section) => {\n        // Get Doc Name for instance header for sections\n        const isHtmIsh = (fileName: string) => {\n            return fileName.includes('.htm') || fileName.includes('.html') || fileName.includes('.xhtml');\n        }\n        const reportFileInfo = filingSummaryInputFiles.filter(file => {\n            if (file._attributes && file._attributes?.original && isHtmIsh(file._text)) {\n                return section.instanceHtm.includes(file._attributes.original)\n            }\n        });\n        if (reportFileInfo.length) {\n            section.instanceDocName = reportFileInfo[0]?._attributes?.doctype;\n        } else {\n            console.error(`Cannot find instance file in FilingsSummary inputfiles`);\n        }\n        return section;\n    }\n\n    const addFactProps = (section: Section) => {\n        section.fact = getFactAttrsFromAnchorProps(section) || undefined;\n        const mrFact = section.fact;\n        if (mrFact?.file  && mrFact?.ancestors && mrFact?.name) {\n            // if an ancestor is a fact name eg \"sbs:SbsefOrglStrDescTextBlock\", need to dress as name attribute\n            const handleSpecialAncestors = mrFact.ancestors.map((a: string) => {\n                if (a.includes(':')) {\n                    if (a.includes('ix:continuation')) return ''; // skip continuation ancestors\n                    return `[name=\"${a}\"]`\n                } else {\n                    return a;\n                }\n            });\n            const ancestorsRelevant = handleSpecialAncestors.reverse().filter((a:string) => a !== \"html\").join(' ');\n            section.inlineFactSelector = `section[filing-url=\"${mrFact.file}\"] > ${ancestorsRelevant} [name=\"${mrFact.name}\"][contextref=\"${mrFact.contextRef}\"]`;\n        }\n        return section;\n    }\n\n    const sectionsArray = metaLinksReports.map((metaReport: Report) => {\n        let section: Section = metaReport as unknown as Section;\n        if (Number(metaVersion) <= 2.1 || !section.menuCat) {\n            section.menuCat = section.subGroupType || section.groupType;\n        }\n        if (metaReport.menuCat && metaReport.shortName) {\n            section = addInstanceProps(section);\n            section = addFactProps(section);\n            section.menuCatMapped = mapCategoryName(section.menuCat, reportsContainStatements);\n            section.domId = `sectionDoc-${convertToSelector(section.instanceDocName, false)}`\n\n            return section;\n        } else {\n            console.error('Cannot determine Section menuCat');\n        }\n    })\n    .filter((section): section is Section => !!(section?.fact && section.menuCatMapped));\n\n    return sectionsArray || [];\n}\n\nconst getFactAttrsFromAnchorProps = (section: Section) => {\n    let fact: SectionFact | null = {};\n    fact.instance = section.instance; // number\n    // fact.menuCat = metaReport.menuCat;\n    if (section.uniqueAnchor) {\n        fact.name = section.uniqueAnchor.name;\n        fact.contextRef = section.uniqueAnchor.contextRef;\n        fact.file = section.uniqueAnchor.baseRef;\n        fact.ancestors = section.uniqueAnchor.ancestors;\n    } else if (section.firstAnchor) {\n        fact.name = section.firstAnchor.name;\n        fact.contextRef = section.firstAnchor.contextRef;\n        fact.file = section.firstAnchor.baseRef;\n        fact.ancestors = section.firstAnchor.ancestors;\n    } else {\n        /* DOC: \"As I recall, the reason for the anchors computed during rendering was that \n                some internal rendering process detail gets lost that neither filing summary.xml \n                nor metalinks.json could preserve (I think it had to do with how chrome will insert \n                elements like <tbody> if they were missing in the input…?), but since I can’t \n                remember what that might be (it’s certainly not obvious) go ahead and try.\" -WH email 4/1/2024 \n        */\n        fact = null;\n    }\n    return fact;\n}\n\n/**\n * Description\n * @param {any} input:string\n * @returns {any} => (string) mapped menu category name || 'INCOMPLETE SECTIONS DATA!'\n * @description use only when there are no 'statement' menu categories\n */\nconst mapCategoryName = (input: string, isStandard: boolean) => {\n    const lowerCaseKey = input.toLowerCase();\n    /*\n        'When the FilingSummary does not have any ‘statement’ category reports for an instance, then the following mapping should be used.  \n        “Reports” is generic and covers all the other things that don’t need their reports grouped into levels of detail.  \n        “Statements” used to be the general case (2008-2020) but now they are becoming the special case.' - WH Mar 29, 2024\n    */\n    const noStatementCatNameMap = {\n        \"cover\": \"Reports\",\n        \"document\": \"Reports\",\n        // \"statement\": n/a\n        // \"Statements\": n/a\n        \"disclosure\": \"Reports\",\n        \"notes\": \"Reports\",\n        \"policies\": \"Reports\", /* very unlikely to happen */\n        \"tables\": \"Reports\", /* very unlikely to happen */\n        \"details\": \"Details\", /* example here http://172.18.85.157:8082/ix-wh/oef24/oef05/out/FilingSummary.htm# */\n        \"prospectus\": \"Prospectus\",\n        \"rr_summaries\": \"RR Summaries\", /* example here http://172.18.85.157:8082/ix-wh/oef24/oef13/out/FilingSummary.htm we no longer make fancy menus for these */\n        \"fee_exhibit\": \"RR Summaries\",\n        \"risk/return\": \"RR Summaries\"\n    };\n    const standardCatNameMap = {\n        \"cover\": \"Cover\",\n        \"document\": \"Document & Entity Information\",\n        \"statement\": \"Financial Statements\",\n        \"statements\": \"Financial Statements\",\n        \"disclosure\": \"Notes to the Financial Statements\",\n        \"notes\": \"Notes to Financial Statements\",\n        \"policies\": \"Accounting Policies\",\n        \"tables\": \"Notes Tables\",\n        \"details\": \"Notes Details\",\n        \"prospectus\": \"Prospectus\",\n        \"rr_summaries\": \"RR Summaries\",\n        \"fee_exhibit\": \"RR Summaries\",\n        \"risk/return\": \"RR Summaries\"\n    };\n    if (isStandard) {\n        if (lowerCaseKey in standardCatNameMap) {\n            return standardCatNameMap[lowerCaseKey as keyof typeof standardCatNameMap];\n        } else {\n            console.info(`standardCatNameMap doesn't contain key: %c${lowerCaseKey}`, \"color: deepskyblue\")\n        }\n    } else {\n        if (lowerCaseKey in noStatementCatNameMap) {\n            return noStatementCatNameMap[lowerCaseKey as keyof typeof noStatementCatNameMap];\n        } else {\n            console.info(`noStatementCatNameMap doesn't contain key: %c${lowerCaseKey}`, \"color: deepskyblue\")\n        }\n    }\n};\n\n\nexport function fetchText(url: string, init?: RequestInit): Promise<string | never>\n{\n    return fetch(url, init).then((response) =>\n    {\n        if(response.status >= 200 && response.status <= 299)\n            return response.text();\n        else\n            throw new Error(response.status.toString());\n    });\n}\nexport function fetchJson<T = any>(url: string, init?: RequestInit): Promise<T | never>\n{\n    return fetch(url, init).then((response) =>\n    {\n        if(response.status >= 200 && response.status <= 299)\n            return response.json();\n        else\n            throw new Error(response.status.toString());\n    });\n}\n\n\n\nexport function setScaleInfo(scale: string | number | undefined): string | null\n{\n    const scaleOptions: Record<string, string> =\n    {\n        0: \"Zero\",\n        1: \"Tens\",\n        2: \"Hundreds\",\n        3: \"Thousands\",\n        4: \"Ten thousands\",\n        5: \"Hundred thousands\",\n        6: \"Millions\",\n        7: \"Ten Millions\",\n        8: \"Hundred Millions\",\n        9: \"Billions\",\n        10: \"Ten Billions\",\n        11: \"Hundred Billions\",\n        12: \"Trillions\",\n        \"-1\": \"Tenths\",\n        \"-2\": \"Hundredths\",\n        \"-3\": \"Thousandths\",\n        \"-4\": \"Ten Thousandths\",\n        \"-5\": \"Hundred Thousandths\",\n        \"-6\": \"Millionths\"\n    };\n    \n    return scaleOptions[scale || \"\"] || null;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [788], () => (__webpack_require__(9233)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.\" + \"92184c66cd7b432d408e\" + \".min.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ixviewer-plus/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t753: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkixviewer_2\"] = self[\"webpackChunkixviewer_2\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","version","featureSet","scrollPosition","window","localStorage","getItem","hoverOption","getHTMLAttributes","getPaginationPerPage","getHtmlOverallFactsCount","getMetaSourceDocuments","getMetaTags","getInstanceFiles","getInlineFiles","sections","setSections","sessionStorage","setItem","JSON","stringify","getSectionsFromSessionStorage","sectionsFromLocal","parse","getStdRef","getFormInformation","getMetaCustomPrefix","getMetaDts","getMetaDocuments","input","getScrollPosition","document","getElementById","scrollTop","getNavBarsHeight","querySelector","offsetHeight","self","onmessage","data","current","facts","x","xhtml","XhtmlPrepper","doWork","postMessage","loadData","Object","assign","this","$","hiddenFacts","fixImages","isWorkstation","fixLinks","redLineFacts","excludeFacts","attributeFacts","slug","html","foundImagesArray","performance","now","Array","from","params","doc","split","searchParams","URLSearchParams","set","delete","forEach","imgElem","imgSrc","attr","imgFileName","includes","substring","lastIndexOf","console","log","toString","startsWith","imageSlug","absolute","prototype","hasOwnProperty","call","attribs","href","slice","length","updatedStyle","values","css","filter","Boolean","hiddenElement","cheerioElement","prop","toLowerCase","replace","key","text","removeAttr","debug","foundElements","r","redline","addClass","map","currentSlug","closest","endsWith","updateMap","mapKey","searchContextref","searchName","entries","value","contextRef","name","getByNameAndContextRef","error","wrap","id","element","scale","fact","get","raw","format","isAdditional","parents","isCustom","customPrefix","isAmountsOnly","isTextOnly","isNegativeOnly","file","continuedIDs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","__webpack_exports__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","d","definition","o","defineProperty","enumerable","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","Symbol","toStringTag","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","then"],"sourceRoot":""}